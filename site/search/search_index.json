{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hi! (:\u025c\u230b\u2220)_ \u00b6 site.info \u8fd9\u91cc\u662f\u65f6\u5ea6\u5ea6\u634f\u3002 \u8fd9\u4e2a\u7b14\u8bb0\u672c\u4f1a\u7528\u6765\u5b58\u4e9b\u4e13\u4e1a\u6027\u8f83\u5f3a\u7684\u7b14\u8bb0\u3002\u4ee5\u4fbf\u4e8e\u548c\u81ea\u5df1\u7684 \u535a\u5ba2 \u533a\u5206\u5f00\u6765\u3002 site.author 17\u5c81\uff0c\u4e8b\u9ad8\u4e09\u751f\uff0c\u4e8b\u54d4\u54e9\u54d4\u54e9\u6478\u9c7c\u533a up \u4e3b @\u53ef\u7231\u517b\u4e0d\u8d77\u7684\u65f6\u5ea6\u5ea6 \u535a\u5ba2\uff1a https://blog.timedegree.cc/ GitHub\uff1a https://github.com/timedegree/","title":"Hi! (:\u025c\u230b\u2220)_"},{"location":"#hi-_","text":"site.info \u8fd9\u91cc\u662f\u65f6\u5ea6\u5ea6\u634f\u3002 \u8fd9\u4e2a\u7b14\u8bb0\u672c\u4f1a\u7528\u6765\u5b58\u4e9b\u4e13\u4e1a\u6027\u8f83\u5f3a\u7684\u7b14\u8bb0\u3002\u4ee5\u4fbf\u4e8e\u548c\u81ea\u5df1\u7684 \u535a\u5ba2 \u533a\u5206\u5f00\u6765\u3002 site.author 17\u5c81\uff0c\u4e8b\u9ad8\u4e09\u751f\uff0c\u4e8b\u54d4\u54e9\u54d4\u54e9\u6478\u9c7c\u533a up \u4e3b @\u53ef\u7231\u517b\u4e0d\u8d77\u7684\u65f6\u5ea6\u5ea6 \u535a\u5ba2\uff1a https://blog.timedegree.cc/ GitHub\uff1a https://github.com/timedegree/","title":"Hi! (:\u025c\u230b\u2220)_"},{"location":"CTF/","text":"CTF \u00b6 Table of Contents \u00b6","title":"CTF"},{"location":"CTF/#ctf","text":"","title":"CTF"},{"location":"CTF/#table-of-contents","text":"","title":"Table of Contents"},{"location":"cs/","text":"Computer Science \u00b6 Table of Contents \u00b6 Programming Language \u7f16\u7a0b\u8bed\u8a00 C/C++ Python Rust","title":"Computer Science"},{"location":"cs/#computer-science","text":"","title":"Computer Science"},{"location":"cs/#table-of-contents","text":"Programming Language \u7f16\u7a0b\u8bed\u8a00 C/C++ Python Rust","title":"Table of Contents"},{"location":"cs/pl/","text":"Programming Language \u00b6 Table of Contents \u00b6 C/C++ Python Rust \u524d\u8a00 \u8bed\u6cd5 \u9644\u5f55","title":"Programming Language"},{"location":"cs/pl/#programming-language","text":"","title":"Programming Language"},{"location":"cs/pl/#table-of-contents","text":"C/C++ Python Rust \u524d\u8a00 \u8bed\u6cd5 \u9644\u5f55","title":"Table of Contents"},{"location":"cs/pl/Rust/","text":"Rust \u00b6 Abstract \u770bMK\u7684\u5c0f\u4f19\u4f34\u6700\u8fd1\u90fd\u5728\u73a9Rust\uff0c\u6211\u4e5f\u7a81\u7136\u60f3\u73a9\u4e00\u4e0b\uff0c\u6240\u4ee5\u5c31\u5f00\u4e86\u8fd9\u4e48\u4e00\u4e2a\u9875\u9762\u6765\u6574\u7406\u4e00\u4e0bRust\u7684\u7b14\u8bb0\u3002 Table of Contents \u00b6 Introduction \u524d\u8a00 Grammar \u8bed\u6cd5 Appendix \u9644\u5f55 Reading List \u00b6 Rust\u8bed\u8a00\u5723\u7ecf (\u770b\u5230\u590d\u5408\u7c7b\u578b) The Rust Programming Language Rusty Book Rust By Practice Rust\u7b97\u6cd5\u6559\u7a0b","title":"Rust"},{"location":"cs/pl/Rust/#rust","text":"Abstract \u770bMK\u7684\u5c0f\u4f19\u4f34\u6700\u8fd1\u90fd\u5728\u73a9Rust\uff0c\u6211\u4e5f\u7a81\u7136\u60f3\u73a9\u4e00\u4e0b\uff0c\u6240\u4ee5\u5c31\u5f00\u4e86\u8fd9\u4e48\u4e00\u4e2a\u9875\u9762\u6765\u6574\u7406\u4e00\u4e0bRust\u7684\u7b14\u8bb0\u3002","title":"Rust"},{"location":"cs/pl/Rust/#table-of-contents","text":"Introduction \u524d\u8a00 Grammar \u8bed\u6cd5 Appendix \u9644\u5f55","title":"Table of Contents"},{"location":"cs/pl/Rust/#reading-list","text":"Rust\u8bed\u8a00\u5723\u7ecf (\u770b\u5230\u590d\u5408\u7c7b\u578b) The Rust Programming Language Rusty Book Rust By Practice Rust\u7b97\u6cd5\u6559\u7a0b","title":"Reading List"},{"location":"cs/pl/Rust/app/","text":"\u9644\u5f55 \u00b6 \u5173\u952e\u5b57 \u00b6 \u5173\u952e\u5b57 as - \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u6d88\u9664\u7279\u5b9a\u5305\u542b\u9879\u7684 trait \u7684\u6b67\u4e49\uff0c\u6216\u8005\u5bf9 use \u548c extern crate \u8bed\u53e5\u4e2d\u7684\u9879\u91cd\u547d\u540d async - \u8fd4\u56de\u4e00\u4e2a Future \u800c\u4e0d\u662f\u963b\u585e\u5f53\u524d\u7ebf\u7a0b await - \u6682\u505c\u6267\u884c\uff0c\u76f4\u5230 Future \u7684\u7ed3\u679c\u51c6\u5907\u597d break - \u7acb\u523b\u9000\u51fa\u5faa\u73af const - \u5b9a\u4e49\u5e38\u91cf\u6216\u4e0d\u53d8\u88f8\u6307\u9488\uff08constant raw pointer\uff09 continue - \u7ee7\u7eed\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u8fed\u4ee3 crate - \u94fe\u63a5\uff08link\uff09\u4e00\u4e2a\u5916\u90e8 crate \u6216\u4e00\u4e2a\u4ee3\u8868\u5b8f\u5b9a\u4e49\u7684 crate \u7684\u5b8f\u53d8\u91cf dyn - \u52a8\u6001\u5206\u53d1 trait \u5bf9\u8c61 else - \u4f5c\u4e3a if \u548c if let \u63a7\u5236\u6d41\u7ed3\u6784\u7684 fallback enum - \u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e extern - \u94fe\u63a5\u4e00\u4e2a\u5916\u90e8 crate \u3001\u51fd\u6570\u6216\u53d8\u91cf false - \u5e03\u5c14\u5b57\u9762\u91cf false fn - \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6216 \u51fd\u6570\u6307\u9488\u7c7b\u578b (function pointer type) for - \u904d\u5386\u4e00\u4e2a\u8fed\u4ee3\u5668\u6216\u5b9e\u73b0\u4e00\u4e2a trait \u6216\u8005\u6307\u5b9a\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u7684\u751f\u547d\u5468\u671f if - \u57fa\u4e8e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5206\u652f impl - \u5b9e\u73b0\u81ea\u6709\u6216 trait \u529f\u80fd in - for \u5faa\u73af\u8bed\u6cd5\u7684\u4e00\u90e8\u5206 let - \u7ed1\u5b9a\u4e00\u4e2a\u53d8\u91cf loop - \u65e0\u6761\u4ef6\u5faa\u73af match - \u6a21\u5f0f\u5339\u914d mod - \u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757 move - \u4f7f\u95ed\u5305\u83b7\u53d6\u5176\u6240\u6355\u83b7\u9879\u7684\u6240\u6709\u6743 mut - \u8868\u793a\u5f15\u7528\u3001\u88f8\u6307\u9488\u6216\u6a21\u5f0f\u7ed1\u5b9a\u7684\u53ef\u53d8\u6027 pub - \u8868\u793a\u7ed3\u6784\u4f53\u5b57\u6bb5\u3001impl \u5757\u6216\u6a21\u5757\u7684\u516c\u6709\u53ef\u89c1\u6027- ref - \u901a\u8fc7\u5f15\u7528\u7ed1\u5b9a return - \u4ece\u51fd\u6570\u4e2d\u8fd4\u56de Self - \u5b9e\u73b0 trait \u7684\u7c7b\u578b\u7684\u7c7b\u578b\u522b\u540d self - \u8868\u793a\u65b9\u6cd5\u672c\u8eab\u6216\u5f53\u524d\u6a21\u5757 static - \u8868\u793a\u5168\u5c40\u53d8\u91cf\u6216\u5728\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4fdd\u6301\u5176\u751f\u547d\u5468\u671f struct - \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 super - \u8868\u793a\u5f53\u524d\u6a21\u5757\u7684\u7236\u6a21\u5757 trait - \u5b9a\u4e49\u4e00\u4e2a trait true - \u5e03\u5c14\u5b57\u9762\u91cf true type - \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u522b\u540d\u6216\u5173\u8054\u7c7b\u578b unsafe - \u8868\u793a\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u3001\u51fd\u6570\u3001trait \u6216\u5b9e\u73b0 use - \u5f15\u5165\u5916\u90e8\u7a7a\u95f4\u7684\u7b26\u53f7 where - \u8868\u793a\u4e00\u4e2a\u7ea6\u675f\u7c7b\u578b\u7684\u4ece\u53e5 while - \u57fa\u4e8e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5224\u65ad\u662f\u5426\u8fdb\u884c\u5faa\u73af \u4fdd\u7559\u5b57 \u5982\u4e0b\u5173\u952e\u5b57\u6ca1\u6709\u4efb\u4f55\u529f\u80fd\uff0c\u4e0d\u8fc7\u7531 Rust \u4fdd\u7559\u4ee5\u5907\u5c06\u6765\u5e94\u7528\u3002 abstract become box do final macro override priv try typeof unsized virtual yield","title":"\u9644\u5f55"},{"location":"cs/pl/Rust/app/#_1","text":"","title":"\u9644\u5f55"},{"location":"cs/pl/Rust/app/#_2","text":"\u5173\u952e\u5b57 as - \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u6d88\u9664\u7279\u5b9a\u5305\u542b\u9879\u7684 trait \u7684\u6b67\u4e49\uff0c\u6216\u8005\u5bf9 use \u548c extern crate \u8bed\u53e5\u4e2d\u7684\u9879\u91cd\u547d\u540d async - \u8fd4\u56de\u4e00\u4e2a Future \u800c\u4e0d\u662f\u963b\u585e\u5f53\u524d\u7ebf\u7a0b await - \u6682\u505c\u6267\u884c\uff0c\u76f4\u5230 Future \u7684\u7ed3\u679c\u51c6\u5907\u597d break - \u7acb\u523b\u9000\u51fa\u5faa\u73af const - \u5b9a\u4e49\u5e38\u91cf\u6216\u4e0d\u53d8\u88f8\u6307\u9488\uff08constant raw pointer\uff09 continue - \u7ee7\u7eed\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u8fed\u4ee3 crate - \u94fe\u63a5\uff08link\uff09\u4e00\u4e2a\u5916\u90e8 crate \u6216\u4e00\u4e2a\u4ee3\u8868\u5b8f\u5b9a\u4e49\u7684 crate \u7684\u5b8f\u53d8\u91cf dyn - \u52a8\u6001\u5206\u53d1 trait \u5bf9\u8c61 else - \u4f5c\u4e3a if \u548c if let \u63a7\u5236\u6d41\u7ed3\u6784\u7684 fallback enum - \u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e extern - \u94fe\u63a5\u4e00\u4e2a\u5916\u90e8 crate \u3001\u51fd\u6570\u6216\u53d8\u91cf false - \u5e03\u5c14\u5b57\u9762\u91cf false fn - \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6216 \u51fd\u6570\u6307\u9488\u7c7b\u578b (function pointer type) for - \u904d\u5386\u4e00\u4e2a\u8fed\u4ee3\u5668\u6216\u5b9e\u73b0\u4e00\u4e2a trait \u6216\u8005\u6307\u5b9a\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u7684\u751f\u547d\u5468\u671f if - \u57fa\u4e8e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5206\u652f impl - \u5b9e\u73b0\u81ea\u6709\u6216 trait \u529f\u80fd in - for \u5faa\u73af\u8bed\u6cd5\u7684\u4e00\u90e8\u5206 let - \u7ed1\u5b9a\u4e00\u4e2a\u53d8\u91cf loop - \u65e0\u6761\u4ef6\u5faa\u73af match - \u6a21\u5f0f\u5339\u914d mod - \u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757 move - \u4f7f\u95ed\u5305\u83b7\u53d6\u5176\u6240\u6355\u83b7\u9879\u7684\u6240\u6709\u6743 mut - \u8868\u793a\u5f15\u7528\u3001\u88f8\u6307\u9488\u6216\u6a21\u5f0f\u7ed1\u5b9a\u7684\u53ef\u53d8\u6027 pub - \u8868\u793a\u7ed3\u6784\u4f53\u5b57\u6bb5\u3001impl \u5757\u6216\u6a21\u5757\u7684\u516c\u6709\u53ef\u89c1\u6027- ref - \u901a\u8fc7\u5f15\u7528\u7ed1\u5b9a return - \u4ece\u51fd\u6570\u4e2d\u8fd4\u56de Self - \u5b9e\u73b0 trait \u7684\u7c7b\u578b\u7684\u7c7b\u578b\u522b\u540d self - \u8868\u793a\u65b9\u6cd5\u672c\u8eab\u6216\u5f53\u524d\u6a21\u5757 static - \u8868\u793a\u5168\u5c40\u53d8\u91cf\u6216\u5728\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4fdd\u6301\u5176\u751f\u547d\u5468\u671f struct - \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 super - \u8868\u793a\u5f53\u524d\u6a21\u5757\u7684\u7236\u6a21\u5757 trait - \u5b9a\u4e49\u4e00\u4e2a trait true - \u5e03\u5c14\u5b57\u9762\u91cf true type - \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u522b\u540d\u6216\u5173\u8054\u7c7b\u578b unsafe - \u8868\u793a\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u3001\u51fd\u6570\u3001trait \u6216\u5b9e\u73b0 use - \u5f15\u5165\u5916\u90e8\u7a7a\u95f4\u7684\u7b26\u53f7 where - \u8868\u793a\u4e00\u4e2a\u7ea6\u675f\u7c7b\u578b\u7684\u4ece\u53e5 while - \u57fa\u4e8e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5224\u65ad\u662f\u5426\u8fdb\u884c\u5faa\u73af \u4fdd\u7559\u5b57 \u5982\u4e0b\u5173\u952e\u5b57\u6ca1\u6709\u4efb\u4f55\u529f\u80fd\uff0c\u4e0d\u8fc7\u7531 Rust \u4fdd\u7559\u4ee5\u5907\u5c06\u6765\u5e94\u7528\u3002 abstract become box do final macro override priv try typeof unsized virtual yield","title":"\u5173\u952e\u5b57"},{"location":"cs/pl/Rust/gram/","text":"\u8bed\u6cd5 \u00b6 Abstract \u91cd\u65b0\u628a\u7b14\u8bb0\u6574\u7406\u4e86\u4e00\u4e0b\uff0c\u6587\u5b57\u66f4\u52a0\u7b80\u6d01\u4e86\u3002 \u4f46\u662f\u5176\u5b9e\u7b14\u8bb0\u4e5f\u624d\u521a\u5199\u4e0d\u4e45\u3002 \u53c2\u8003 Rust\u8bed\u8a00\u5723\u7ecf \u7fd4\u54e5\u7684Rust\u7b14\u8bb0 1 \u53d8\u91cf \u00b6 1.1 \u53d8\u91cf\u547d\u540d \u00b6 \u539f\u751f\u6807\u8bc6\u7b26\uff08raw identifiers\uff09 \u4e0d\u80fd\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u5173\u952e\u5b57 \u5728\u5173\u952e\u5b57\u524d\u52a0r#\u540e\u53ef\u4ee5\u4f7f\u7528 \u547d\u540d\u89c4\u8303\uff1a \u6761\u76ee \u60ef\u4f8b \u5305 Crates unclear \u6a21\u5757 Modules snake_case \u7c7b\u578b Types UpperCamelCase \u7279\u5f81 Traits UpperCamelCase \u679a\u4e3e Enumerations UpperCamelCase \u7ed3\u6784\u4f53 Structs UpperCamelCase \u51fd\u6570 Functions snake_case \u65b9\u6cd5 Methods snake_case \u901a\u7528\u6784\u9020\u5668 General constructors new or with_more_details \u8f6c\u6362\u6784\u9020\u5668 Conversion constructors from_some_other_type \u5b8f Macros snake_case! \u5c40\u90e8\u53d8\u91cf Local variables snake_case \u9759\u6001\u7c7b\u578b Statics SCREAMING_SNAKE_CASE \u5e38\u91cf Constants SCREAMING_SNAKE_CASE \u7c7b\u578b\u53c2\u6570 Type parameters UpperCamelCase\uff0c\u901a\u5e38\u4f7f\u7528\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd: T \u751f\u547d\u5468\u671f Lifetimes \u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd: 'a\uff0c'de\uff0c'src Features unclear but see C-FEATURE 1.2 \u53d8\u91cf\u7684\u7ed1\u5b9a\u4e0e\u53ef\u53d8\u6027 \u00b6 \u5728rust\u4e2d\u6211\u4eec\u4f7f\u7528let\u8fdb\u884c\u53d8\u91cf\u7ed1\u5b9a\uff0c\u5982\uff1a let a = 233 ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528let\u7ed1\u5b9a\u53d8\u91cf\u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\u7684\uff08immutable\uff09\uff0c\u4f7f\u5176\u53ef\u53d8\u9700\u8981\u5728let\u540e\u52a0mut\uff0c\u6216\u662f\u518d\u6b21\u4f7f\u7528let\u6539\u53d8\u5176\u7ed1\u5b9a\u7684\u503c\uff0c\u5982\uff1a let mut a = 233 ; a = a + 1 ; let a = a + 1 ; \\\\\u4e8c\u8005\u7b49\u6548 \u82e5\u662f\u4e0d\u4f7f\u53d8\u91cf\u6539\u4e3a\u53ef\u53d8\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u53d1\u51fa\u8b66\u544a\u3002 \u53d8\u91cf\u5b58\u5728\u4f46\u6ca1\u6709\u4f7f\u7528\u4e5f\u4f1a\u8b66\u544a\uff0c\u4f46\u53ef\u4ee5\u5728\u53d8\u91cf\u524d\u52a0\u5355\u4e0b\u5212\u7ebf _ \u6765\u5ffd\u7565\u8b66\u544a\u3002 1.3 \u53d8\u91cf\u89e3\u6784\u4e0e\u7ed3\u6784\u5f0f\u8d4b\u503c \u00b6 \u4e0epython\u4e2d\u7684\u89e3\u5305\u7c7b\u4f3c let ( a , mut b ) : ( bool , bool ) = ( true , false ); // a = true,\u4e0d\u53ef\u53d8; b = false\uff0c\u53ef\u53d8 let ( a , b , c , d ); ( a , b ) = ( 1 , 2 ); // a = 1;b = 2 [ c , .. , d , _ ] = [ 1 , 2 , 3 , 4 , 5 ]; // c = 1; d = 4 1.4 \u5e38\u91cf \u00b6 \u5e38\u91cf\u4f7f\u7528const\u6765\u58f0\u660e\uff0c\u547d\u540d\u89c4\u5219\u4f7f\u7528\u5168\u5927\u5199\u86c7\u5e95\u5f0f\uff0c\u4e14\u4e0d\u5141\u8bb8\u5728const\u540e\u52a0mut,\u53ef\u4ee5\u5728\u4efb\u610f\u4f5c\u7528\u57df\u4e0b\u58f0\u660e\u3002 const PI : f32 = 3.14159 ; 1.5 \u53d8\u91cf\u906e\u853d \u00b6 Rust \u5141\u8bb8\u58f0\u660e\u76f8\u540c\u7684\u53d8\u91cf\u540d\uff0c\u5728\u540e\u9762\u58f0\u660e\u7684\u53d8\u91cf\u4f1a\u906e\u853d\u6389\u524d\u9762\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5728\u53ef\u53d8\u6027\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\u3002\u5373\uff1a let a = 233 ; let a = a + 1 ; 2 \u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 2.1 \u6574\u578b \u00b6 i+\u957f\u5ea6\uff08\u6709\u7b26\u53f7\uff09\u3001u+\u957f\u5ea6\uff08\u65e0\u7b26\u53f7\uff09 i8\u3001i16\u3001i32\u3001i64\u3001i128\u3001u8\u3001u16\u3001u32\u3001u64\u3001u128 isize\u3001usize \u957f\u5ea6\u7531 CPU \u51b3\u5b9a\uff0c32 \u4f4d CPU \u5219\u662f 32 \u4f4d\uff0c64 \u4f4d CPU \u5219\u662f 64 \u4f4d \u6574\u578b\u5b57\u9762\u91cf\u4e2d\u95f4\u53ef\u4ee5\u63d2\u5165 _ \u5b57\u9762\u91cf\u7ed3\u5c3e\u53ef\u4ee5\u63a5\u7c7b\u578b\uff0c\u4f8b\u5982 10 i32 , 10_ i32 \u5b57\u9762\u91cf\uff0c\u5341\u516d\u8fdb\u5236 0x...\u3001\u516b\u8fdb\u5236 0o...\u3001\u4e8c\u8fdb\u5236 0b...\u3001\u5b57\u8282\uff08\u4ec5 u8\uff09b'A' \u6574\u578b\u9ed8\u8ba4\u4f7f\u7528 i32 \u7c7b\u578b \u4f7f\u7528 as \u6765\u8f6c\u6362\u7c7b\u578b\uff0c\u4f8b\u5982 let a : u16 = 1_ u8 as u16 ; debug \u6a21\u5f0f\u7f16\u8bd1\u65f6\u4ea7\u751f\u6ea2\u51fa\u4f1a panic\uff0c\u800c\u5728 release \u6a21\u5f0f\u4e0b\u5219\u4e0d\u4f1a panic\uff0c\u6309\u7167\u8865\u7801\u5faa\u73af\u6ea2\u51fa\u3002\u4f46\u4e0d\u80fd\u4f9d\u8d56\u8fd9\u79cd\u884c\u4e3a\uff0c\u60f3\u8981\u8fd9\u6837\u7684\u6548\u679c\u5e94\u8be5\u6807\u51c6\u5e93\u7684\u4e00\u4e9b\u65b9\u6cd5\uff1a wrapping_ * \u65b9\u6cd5\uff0c\u6309\u7167\u8865\u7801\u5faa\u73af\u6ea2\u51fa\uff0c\u4f8b\u5982 a.wrapping_add(1) checked_ * \u65b9\u6cd5\uff0c\u5982\u679c\u4ea7\u751f\u6ea2\u51fa\u4e86\uff0c\u5219\u4f1a\u8fd4\u56de None overflowing_ * \u65b9\u6cd5\uff0c\u8fd4\u56de\u7ed3\u679c\u4ee5\u53ca\u6307\u793a\u662f\u5426\u6ea2\u51fa\u7684\u5e03\u5c14\u503c saturating_ * \u65b9\u6cd5\uff0c\u5982\u679c\u4f1a\u6ea2\u51fa\u5219\u4fdd\u6301\u5728\u6700\u5927/\u6700\u5c0f\u503c\u4e0a 2.1.1 \u5e03\u5c14\u578b \u00b6 \u5e03\u5c14\u578b\u7528bool\u6765\u58f0\u660e\uff0c\u503c\u4e3a true \u6216 false \uff0c\u5360\u7528\u4e00\u4e2a\u5b57\u8282 2.2 \u6d6e\u70b9\u578b \u00b6 f32\u4e3a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0cf64\u4e3a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b \u907f\u514d\u5728\u6d6e\u70b9\u6570\u4e0a\u6d4b\u8bd5\u76f8\u7b49\u6027 \u5f53\u7ed3\u679c\u5728\u6570\u5b66\u4e0a\u53ef\u80fd\u5b58\u5728\u672a\u5b9a\u4e49\u65f6\uff0c\u9700\u8981\u683c\u5916\u7684\u5c0f\u5fc3 \u53ef\u4ee5\u4f7f\u7528 is_nan () \u7b49\u65b9\u6cd5\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u662f\u5426\u4e3aNaN \u53ef\u4ee5\u76f4\u63a5\u5bf9\u6570\u503c\u4f7f\u7528\u65b9\u6cd5\uff0c\u5982 3.14_ f32 . round () 2.3 \u6570\u503c\u8fd0\u7b97 \u00b6 + - * / % \uff1a\u52a0\u51cf\u4e58\u9664\u53d6\u6a21 & | ^ ! << >> \uff1a\u4f4d\u8fd0\u7b97 \u540c\u6837\u7c7b\u578b\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3001\u7c7b\u578b\u8f6c\u6362\u5fc5\u987b\u662f\u663e\u5f0f\u7684 \u5176\u5b83\u8fd0\u7b97\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u5b9e\u73b0\uff0c.pow() \u8ba1\u7b97\u6307\u6570\u3001.sqrt() \u8ba1\u7b97\u5e73\u65b9\u6839\u3001\uff0c.log() \u53d6\u5bf9\u6570\u3001.div_euclid() \u6574\u9664\u3001.div_floor() \u7b49\u7b49 2.4 \u5e8f\u5217 \u00b6 Rust \u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u6d01\u7684\u65b9\u5f0f\uff0c\u7528\u6765\u751f\u6210\u8fde\u7eed\u7684\u6570\u503c\uff0c\u4f46\u5e8f\u5217\u53ea\u5141\u8bb8\u7528\u4e8e\u6570\u5b57\u6216\u5b57\u7b26\u7c7b\u578b\u3002 for i in 1 ..= 5 { println! ( \"{}\" , i ); } for i in 'a' ..= 'z' { println! ( \"{}\" , i ); } 2.5 \u5b57\u7b26\u578b \u00b6 \u5728Rust\u4e2d\u5b57\u7b26\u4ee5char\u58f0\u660e\u3002 char\u5360\u75284\u4e2a\u5b57\u8282\u5185\u5b58 \u4f7f\u7528\u5355\u5f15\u53f7''\u62ec\u5355\u4e2a\u5b57\u7b26\uff0c\u53cc\u5f15\u53f7\"\"\u62ec\u5b57\u7b26\u4e32 \u76f4\u63a5\u5b58\u50a8Unicode\uff0c\u800c\u975eUTF-8 2.6 \u5355\u5143\u578b \u00b6 \u5355\u5143\u7c7b\u578b\u5c31\u662f ()\uff0c\u552f\u4e00\u7684\u503c\u4e5f\u662f ()\uff0c\u5b8c\u5168\u4e0d\u5360\u7528\u4efb\u4f55\u5185\u5b58\u3002 main \u51fd\u6570\u5c31\u8fd4\u56de\u5355\u5143\u7c7b\u578b () 2.7 \u8bed\u53e5\u4e0e\u8868\u8fbe\u5f0f \u00b6 \u7b80\u5355\u6765\u8bf4\uff0c\u5728\u4e00\u884c\u4ee3\u7801\u540e\u5e26\u5206\u53f7\u7684\u5c31\u662f\u4e00\u4e2a\u8bed\u53e5\uff0c\u800c\u4e0d\u5e26\u5206\u53f7\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c \u8868\u8fbe\u5f0f\u6709\u8fd4\u56de\u503c,\u800c\u8bed\u4e0d\u4f1a\u8fd4\u56de\u503c \u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u8bed\u53e5\u7684\u4e00\u90e8\u5206\uff0c\u6bd4\u5982 let a = if condition { 5 } else { 6 } ; \u4e2d if condition { 5 } else { 6 } \u5c31\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c\u6574\u4f53\u662f\u4e00\u4e2a\u8bed\u53e5 \u51fd\u6570\u8c03\u7528\u662f\u8868\u8fbe\u5f0f\uff0c\u56e0\u4e3a\u4f1a\u6709\u8fd4\u56de\u503c\uff0c\u5373\u4f7f\u201c\u65e0\u201d\u8fd4\u56de\u503c\u4e5f\u4f1a\u8fd4\u56de\u5355\u5143\u7c7b\u578b \u7528\u5927\u62ec\u53f7\u5305\u88f9\u7684\u8fd4\u56de\u4e00\u4e2a\u503c\u7684\u8bed\u53e5\u5757\u4e5f\u662f\u8868\u8fbe\u5f0f\uff1a let a = { let b = 1 ; b + 1 }; 2.8 \u51fd\u6570 \u00b6 fn add ( i : i32 , j : i32 ) -> i32 { //\u4ee5fn\u58f0\u660e\u51fd\u6570,\u62ec\u53f7\u5185\u5199\u53c2\u6570\u53ca\u5176\u7c7b\u578b\uff0c\u540e\u7528\u7bad\u5934\u8868\u793a\u8fd4\u56de\u503c i + j //\u4e0ereturn i + j\u7b49\u6548 } } \u5b9a\u4e49\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57 fn \u51fd\u6570\u540d\u3001\u53c2\u6570\u540d\u4f7f\u7528\u86c7\u5e95\u5f0f\u547d\u540d \u5fc5\u987b\u663e\u5f0f\u6307\u5b9a\u53c2\u6570\u7c7b\u578b\uff0c\u9664\u4e86\u8fd4\u56de () \u5916\u8981\u663e\u5f0f\u6307\u5b9a\u8fd4\u56de\u503c\u7c7b\u578b \u901a\u8fc7 ; \u7ed3\u5c3e\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u4e00\u4e2a () \u4e2d\u9014\u8fd4\u56de\u53ef\u4ee5\u4f7f\u7528 return \u5173\u952e\u5b57\uff08\u5e26\u4e0d\u5e26\u5206\u53f7\u5747\u53ef\uff09 \u6c38\u4e0d\u8fd4\u56de\u7684\u51fd\u6570\u7c7b\u578b\u4e3a !\uff08\u76f8\u5f53\u4e8e python \u7c7b\u578b\u6807\u6ce8\u4e2d\u7684 NoReturn\uff09\uff0c\u79f0\u4e3a\u53d1\u6563\u51fd\u6570\uff0c\u4e00\u822c\u7528\u4e8e\u4e00\u5b9a\u4f1a\u629b\u51fa panic \u7684\u51fd\u6570\u6216\u8005\u65e0\u9650\u5faa\u73af\uff1a fn dead_end () -> ! { panic! ( \"...\" ); } fn forever () -> ! { loop { /*...*/ }; } 3 \u6240\u6709\u6743\u4e0e\u501f\u7528 \u00b6 \u9ad8\u4e09\u6bd4\u8f83\u5fd9\uff0c\u6682\u65f6\u4e0d\u66f4\u65b0XD","title":"\u8bed\u6cd5"},{"location":"cs/pl/Rust/gram/#_1","text":"Abstract \u91cd\u65b0\u628a\u7b14\u8bb0\u6574\u7406\u4e86\u4e00\u4e0b\uff0c\u6587\u5b57\u66f4\u52a0\u7b80\u6d01\u4e86\u3002 \u4f46\u662f\u5176\u5b9e\u7b14\u8bb0\u4e5f\u624d\u521a\u5199\u4e0d\u4e45\u3002 \u53c2\u8003 Rust\u8bed\u8a00\u5723\u7ecf \u7fd4\u54e5\u7684Rust\u7b14\u8bb0","title":"\u8bed\u6cd5"},{"location":"cs/pl/Rust/gram/#1","text":"","title":"1 \u53d8\u91cf"},{"location":"cs/pl/Rust/gram/#11","text":"\u539f\u751f\u6807\u8bc6\u7b26\uff08raw identifiers\uff09 \u4e0d\u80fd\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u5173\u952e\u5b57 \u5728\u5173\u952e\u5b57\u524d\u52a0r#\u540e\u53ef\u4ee5\u4f7f\u7528 \u547d\u540d\u89c4\u8303\uff1a \u6761\u76ee \u60ef\u4f8b \u5305 Crates unclear \u6a21\u5757 Modules snake_case \u7c7b\u578b Types UpperCamelCase \u7279\u5f81 Traits UpperCamelCase \u679a\u4e3e Enumerations UpperCamelCase \u7ed3\u6784\u4f53 Structs UpperCamelCase \u51fd\u6570 Functions snake_case \u65b9\u6cd5 Methods snake_case \u901a\u7528\u6784\u9020\u5668 General constructors new or with_more_details \u8f6c\u6362\u6784\u9020\u5668 Conversion constructors from_some_other_type \u5b8f Macros snake_case! \u5c40\u90e8\u53d8\u91cf Local variables snake_case \u9759\u6001\u7c7b\u578b Statics SCREAMING_SNAKE_CASE \u5e38\u91cf Constants SCREAMING_SNAKE_CASE \u7c7b\u578b\u53c2\u6570 Type parameters UpperCamelCase\uff0c\u901a\u5e38\u4f7f\u7528\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd: T \u751f\u547d\u5468\u671f Lifetimes \u901a\u5e38\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd: 'a\uff0c'de\uff0c'src Features unclear but see C-FEATURE","title":"1.1 \u53d8\u91cf\u547d\u540d"},{"location":"cs/pl/Rust/gram/#12","text":"\u5728rust\u4e2d\u6211\u4eec\u4f7f\u7528let\u8fdb\u884c\u53d8\u91cf\u7ed1\u5b9a\uff0c\u5982\uff1a let a = 233 ; \u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u4f7f\u7528let\u7ed1\u5b9a\u53d8\u91cf\u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\u7684\uff08immutable\uff09\uff0c\u4f7f\u5176\u53ef\u53d8\u9700\u8981\u5728let\u540e\u52a0mut\uff0c\u6216\u662f\u518d\u6b21\u4f7f\u7528let\u6539\u53d8\u5176\u7ed1\u5b9a\u7684\u503c\uff0c\u5982\uff1a let mut a = 233 ; a = a + 1 ; let a = a + 1 ; \\\\\u4e8c\u8005\u7b49\u6548 \u82e5\u662f\u4e0d\u4f7f\u53d8\u91cf\u6539\u4e3a\u53ef\u53d8\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4f1a\u53d1\u51fa\u8b66\u544a\u3002 \u53d8\u91cf\u5b58\u5728\u4f46\u6ca1\u6709\u4f7f\u7528\u4e5f\u4f1a\u8b66\u544a\uff0c\u4f46\u53ef\u4ee5\u5728\u53d8\u91cf\u524d\u52a0\u5355\u4e0b\u5212\u7ebf _ \u6765\u5ffd\u7565\u8b66\u544a\u3002","title":"1.2 \u53d8\u91cf\u7684\u7ed1\u5b9a\u4e0e\u53ef\u53d8\u6027"},{"location":"cs/pl/Rust/gram/#13","text":"\u4e0epython\u4e2d\u7684\u89e3\u5305\u7c7b\u4f3c let ( a , mut b ) : ( bool , bool ) = ( true , false ); // a = true,\u4e0d\u53ef\u53d8; b = false\uff0c\u53ef\u53d8 let ( a , b , c , d ); ( a , b ) = ( 1 , 2 ); // a = 1;b = 2 [ c , .. , d , _ ] = [ 1 , 2 , 3 , 4 , 5 ]; // c = 1; d = 4","title":"1.3 \u53d8\u91cf\u89e3\u6784\u4e0e\u7ed3\u6784\u5f0f\u8d4b\u503c"},{"location":"cs/pl/Rust/gram/#14","text":"\u5e38\u91cf\u4f7f\u7528const\u6765\u58f0\u660e\uff0c\u547d\u540d\u89c4\u5219\u4f7f\u7528\u5168\u5927\u5199\u86c7\u5e95\u5f0f\uff0c\u4e14\u4e0d\u5141\u8bb8\u5728const\u540e\u52a0mut,\u53ef\u4ee5\u5728\u4efb\u610f\u4f5c\u7528\u57df\u4e0b\u58f0\u660e\u3002 const PI : f32 = 3.14159 ;","title":"1.4 \u5e38\u91cf"},{"location":"cs/pl/Rust/gram/#15","text":"Rust \u5141\u8bb8\u58f0\u660e\u76f8\u540c\u7684\u53d8\u91cf\u540d\uff0c\u5728\u540e\u9762\u58f0\u660e\u7684\u53d8\u91cf\u4f1a\u906e\u853d\u6389\u524d\u9762\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u5728\u53ef\u53d8\u6027\u4e2d\u5df2\u7ecf\u63d0\u5230\u8fc7\u3002\u5373\uff1a let a = 233 ; let a = a + 1 ;","title":"1.5 \u53d8\u91cf\u906e\u853d"},{"location":"cs/pl/Rust/gram/#2","text":"","title":"2 \u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"cs/pl/Rust/gram/#21","text":"i+\u957f\u5ea6\uff08\u6709\u7b26\u53f7\uff09\u3001u+\u957f\u5ea6\uff08\u65e0\u7b26\u53f7\uff09 i8\u3001i16\u3001i32\u3001i64\u3001i128\u3001u8\u3001u16\u3001u32\u3001u64\u3001u128 isize\u3001usize \u957f\u5ea6\u7531 CPU \u51b3\u5b9a\uff0c32 \u4f4d CPU \u5219\u662f 32 \u4f4d\uff0c64 \u4f4d CPU \u5219\u662f 64 \u4f4d \u6574\u578b\u5b57\u9762\u91cf\u4e2d\u95f4\u53ef\u4ee5\u63d2\u5165 _ \u5b57\u9762\u91cf\u7ed3\u5c3e\u53ef\u4ee5\u63a5\u7c7b\u578b\uff0c\u4f8b\u5982 10 i32 , 10_ i32 \u5b57\u9762\u91cf\uff0c\u5341\u516d\u8fdb\u5236 0x...\u3001\u516b\u8fdb\u5236 0o...\u3001\u4e8c\u8fdb\u5236 0b...\u3001\u5b57\u8282\uff08\u4ec5 u8\uff09b'A' \u6574\u578b\u9ed8\u8ba4\u4f7f\u7528 i32 \u7c7b\u578b \u4f7f\u7528 as \u6765\u8f6c\u6362\u7c7b\u578b\uff0c\u4f8b\u5982 let a : u16 = 1_ u8 as u16 ; debug \u6a21\u5f0f\u7f16\u8bd1\u65f6\u4ea7\u751f\u6ea2\u51fa\u4f1a panic\uff0c\u800c\u5728 release \u6a21\u5f0f\u4e0b\u5219\u4e0d\u4f1a panic\uff0c\u6309\u7167\u8865\u7801\u5faa\u73af\u6ea2\u51fa\u3002\u4f46\u4e0d\u80fd\u4f9d\u8d56\u8fd9\u79cd\u884c\u4e3a\uff0c\u60f3\u8981\u8fd9\u6837\u7684\u6548\u679c\u5e94\u8be5\u6807\u51c6\u5e93\u7684\u4e00\u4e9b\u65b9\u6cd5\uff1a wrapping_ * \u65b9\u6cd5\uff0c\u6309\u7167\u8865\u7801\u5faa\u73af\u6ea2\u51fa\uff0c\u4f8b\u5982 a.wrapping_add(1) checked_ * \u65b9\u6cd5\uff0c\u5982\u679c\u4ea7\u751f\u6ea2\u51fa\u4e86\uff0c\u5219\u4f1a\u8fd4\u56de None overflowing_ * \u65b9\u6cd5\uff0c\u8fd4\u56de\u7ed3\u679c\u4ee5\u53ca\u6307\u793a\u662f\u5426\u6ea2\u51fa\u7684\u5e03\u5c14\u503c saturating_ * \u65b9\u6cd5\uff0c\u5982\u679c\u4f1a\u6ea2\u51fa\u5219\u4fdd\u6301\u5728\u6700\u5927/\u6700\u5c0f\u503c\u4e0a","title":"2.1 \u6574\u578b"},{"location":"cs/pl/Rust/gram/#22","text":"f32\u4e3a\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b\uff0cf64\u4e3a\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b \u907f\u514d\u5728\u6d6e\u70b9\u6570\u4e0a\u6d4b\u8bd5\u76f8\u7b49\u6027 \u5f53\u7ed3\u679c\u5728\u6570\u5b66\u4e0a\u53ef\u80fd\u5b58\u5728\u672a\u5b9a\u4e49\u65f6\uff0c\u9700\u8981\u683c\u5916\u7684\u5c0f\u5fc3 \u53ef\u4ee5\u4f7f\u7528 is_nan () \u7b49\u65b9\u6cd5\u6765\u5224\u65ad\u4e00\u4e2a\u6570\u503c\u662f\u5426\u4e3aNaN \u53ef\u4ee5\u76f4\u63a5\u5bf9\u6570\u503c\u4f7f\u7528\u65b9\u6cd5\uff0c\u5982 3.14_ f32 . round ()","title":"2.2 \u6d6e\u70b9\u578b"},{"location":"cs/pl/Rust/gram/#23","text":"+ - * / % \uff1a\u52a0\u51cf\u4e58\u9664\u53d6\u6a21 & | ^ ! << >> \uff1a\u4f4d\u8fd0\u7b97 \u540c\u6837\u7c7b\u578b\u624d\u80fd\u8fdb\u884c\u8ba1\u7b97\u3001\u7c7b\u578b\u8f6c\u6362\u5fc5\u987b\u662f\u663e\u5f0f\u7684 \u5176\u5b83\u8fd0\u7b97\u53ef\u4ee5\u901a\u8fc7\u65b9\u6cd5\u5b9e\u73b0\uff0c.pow() \u8ba1\u7b97\u6307\u6570\u3001.sqrt() \u8ba1\u7b97\u5e73\u65b9\u6839\u3001\uff0c.log() \u53d6\u5bf9\u6570\u3001.div_euclid() \u6574\u9664\u3001.div_floor() \u7b49\u7b49","title":"2.3 \u6570\u503c\u8fd0\u7b97"},{"location":"cs/pl/Rust/gram/#24","text":"Rust \u63d0\u4f9b\u4e86\u4e00\u4e2a\u975e\u5e38\u7b80\u6d01\u7684\u65b9\u5f0f\uff0c\u7528\u6765\u751f\u6210\u8fde\u7eed\u7684\u6570\u503c\uff0c\u4f46\u5e8f\u5217\u53ea\u5141\u8bb8\u7528\u4e8e\u6570\u5b57\u6216\u5b57\u7b26\u7c7b\u578b\u3002 for i in 1 ..= 5 { println! ( \"{}\" , i ); } for i in 'a' ..= 'z' { println! ( \"{}\" , i ); }","title":"2.4 \u5e8f\u5217"},{"location":"cs/pl/Rust/gram/#25","text":"\u5728Rust\u4e2d\u5b57\u7b26\u4ee5char\u58f0\u660e\u3002 char\u5360\u75284\u4e2a\u5b57\u8282\u5185\u5b58 \u4f7f\u7528\u5355\u5f15\u53f7''\u62ec\u5355\u4e2a\u5b57\u7b26\uff0c\u53cc\u5f15\u53f7\"\"\u62ec\u5b57\u7b26\u4e32 \u76f4\u63a5\u5b58\u50a8Unicode\uff0c\u800c\u975eUTF-8","title":"2.5 \u5b57\u7b26\u578b"},{"location":"cs/pl/Rust/gram/#26","text":"\u5355\u5143\u7c7b\u578b\u5c31\u662f ()\uff0c\u552f\u4e00\u7684\u503c\u4e5f\u662f ()\uff0c\u5b8c\u5168\u4e0d\u5360\u7528\u4efb\u4f55\u5185\u5b58\u3002 main \u51fd\u6570\u5c31\u8fd4\u56de\u5355\u5143\u7c7b\u578b ()","title":"2.6 \u5355\u5143\u578b"},{"location":"cs/pl/Rust/gram/#27","text":"\u7b80\u5355\u6765\u8bf4\uff0c\u5728\u4e00\u884c\u4ee3\u7801\u540e\u5e26\u5206\u53f7\u7684\u5c31\u662f\u4e00\u4e2a\u8bed\u53e5\uff0c\u800c\u4e0d\u5e26\u5206\u53f7\u7684\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c \u8868\u8fbe\u5f0f\u6709\u8fd4\u56de\u503c,\u800c\u8bed\u4e0d\u4f1a\u8fd4\u56de\u503c \u8868\u8fbe\u5f0f\u53ef\u4ee5\u662f\u8bed\u53e5\u7684\u4e00\u90e8\u5206\uff0c\u6bd4\u5982 let a = if condition { 5 } else { 6 } ; \u4e2d if condition { 5 } else { 6 } \u5c31\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c\u6574\u4f53\u662f\u4e00\u4e2a\u8bed\u53e5 \u51fd\u6570\u8c03\u7528\u662f\u8868\u8fbe\u5f0f\uff0c\u56e0\u4e3a\u4f1a\u6709\u8fd4\u56de\u503c\uff0c\u5373\u4f7f\u201c\u65e0\u201d\u8fd4\u56de\u503c\u4e5f\u4f1a\u8fd4\u56de\u5355\u5143\u7c7b\u578b \u7528\u5927\u62ec\u53f7\u5305\u88f9\u7684\u8fd4\u56de\u4e00\u4e2a\u503c\u7684\u8bed\u53e5\u5757\u4e5f\u662f\u8868\u8fbe\u5f0f\uff1a let a = { let b = 1 ; b + 1 };","title":"2.7 \u8bed\u53e5\u4e0e\u8868\u8fbe\u5f0f"},{"location":"cs/pl/Rust/gram/#28","text":"fn add ( i : i32 , j : i32 ) -> i32 { //\u4ee5fn\u58f0\u660e\u51fd\u6570,\u62ec\u53f7\u5185\u5199\u53c2\u6570\u53ca\u5176\u7c7b\u578b\uff0c\u540e\u7528\u7bad\u5934\u8868\u793a\u8fd4\u56de\u503c i + j //\u4e0ereturn i + j\u7b49\u6548 } } \u5b9a\u4e49\u51fd\u6570\u4f7f\u7528\u5173\u952e\u5b57 fn \u51fd\u6570\u540d\u3001\u53c2\u6570\u540d\u4f7f\u7528\u86c7\u5e95\u5f0f\u547d\u540d \u5fc5\u987b\u663e\u5f0f\u6307\u5b9a\u53c2\u6570\u7c7b\u578b\uff0c\u9664\u4e86\u8fd4\u56de () \u5916\u8981\u663e\u5f0f\u6307\u5b9a\u8fd4\u56de\u503c\u7c7b\u578b \u901a\u8fc7 ; \u7ed3\u5c3e\u7684\u8868\u8fbe\u5f0f\u8fd4\u56de\u4e00\u4e2a () \u4e2d\u9014\u8fd4\u56de\u53ef\u4ee5\u4f7f\u7528 return \u5173\u952e\u5b57\uff08\u5e26\u4e0d\u5e26\u5206\u53f7\u5747\u53ef\uff09 \u6c38\u4e0d\u8fd4\u56de\u7684\u51fd\u6570\u7c7b\u578b\u4e3a !\uff08\u76f8\u5f53\u4e8e python \u7c7b\u578b\u6807\u6ce8\u4e2d\u7684 NoReturn\uff09\uff0c\u79f0\u4e3a\u53d1\u6563\u51fd\u6570\uff0c\u4e00\u822c\u7528\u4e8e\u4e00\u5b9a\u4f1a\u629b\u51fa panic \u7684\u51fd\u6570\u6216\u8005\u65e0\u9650\u5faa\u73af\uff1a fn dead_end () -> ! { panic! ( \"...\" ); } fn forever () -> ! { loop { /*...*/ }; }","title":"2.8 \u51fd\u6570"},{"location":"cs/pl/Rust/gram/#3","text":"\u9ad8\u4e09\u6bd4\u8f83\u5fd9\uff0c\u6682\u65f6\u4e0d\u66f4\u65b0XD","title":"3 \u6240\u6709\u6743\u4e0e\u501f\u7528"},{"location":"cs/pl/Rust/intro/","text":"\u524d\u8a00 \u00b6 Installation \u00b6 \u7531\u4e8e\u6211\u662fWin,\u76f4\u63a5\u5728\u5b98\u7f51\u4e0b\u8f7drustup\u5c31\u884c\uff0c\u7136\u540e\u6253\u5f00\u540e\u4e00\u8def\u5f04\u4e0b\u53bb\u5c31\u884c \u5378\u8f7d\u3001\u66f4\u65b0\u3001\u68c0\u67e5 rustup update rustup self uninstall rustc --version rustc \u00b6 Rust\u4ee3\u7801\u7684\u540e\u7f00\u540d\u662f .rs \uff0c\u901a\u8fc7 rustc code.rs \u6765\u7f16\u8bd1\u518d\u8fd0\u884c Cargo \u00b6 \u901a\u8fc7rustup\u5b89\u88c5\u540e\u81ea\u5e26cargo\uff0c\u53ef\u4ee5\u901a\u8fc7 cargo --version \u68c0\u67e5 \u5404\u79cd\u547d\u4ee4 cargo new \u65b0\u5efa\u9879\u76ee cargo build \u7f16\u8bd1 cargo run \u8fd0\u884c cargo check \u68c0\u67e5\u662f\u5426\u7f16\u8bd1\u6210\u529f cargo build --release \u9ad8\u6027\u80fd\u7f16\u8bd1 Hello world! \u00b6 fn main () { println! ( \"Hello, world!\" ); } Rust\u6240\u9700\u8981\u6ce8\u610f\u7684\u7279\u6027 \u00b6 \u63a7\u5236\u6d41\uff1afor \u548c continue \u8fde\u5728\u4e00\u8d77\u4f7f\u7528\uff0c\u5b9e\u73b0\u5faa\u73af\u63a7\u5236\u3002 \u65b9\u6cd5\u8bed\u6cd5\uff1a\u7531\u4e8e Rust \u6ca1\u6709\u7ee7\u627f\uff0c\u56e0\u6b64 Rust \u4e0d\u662f\u4f20\u7edf\u610f\u4e49\u4e0a\u7684\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff0c\u4f46\u662f\u5b83\u5374\u4ece OO \u8bed\u8a00\u90a3\u91cc\u5077\u5e08\u4e86\u65b9\u6cd5\u7684\u4f7f\u7528 record.trim()\uff0crecord.split(',') \u7b49\u3002 \u9ad8\u9636\u51fd\u6570\u7f16\u7a0b\uff1a\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4e5f\u80fd\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u4f8b\u5982 .map(|field| field.trim())\uff0c\u8fd9\u91cc map \u65b9\u6cd5\u4e2d\u4f7f\u7528\u95ed\u5305\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u79f0\u547c\u4e3a \u533f\u540d\u51fd\u6570\u3001lambda \u51fd\u6570\u3002 \u7c7b\u578b\u6807\u6ce8\uff1aif let Ok(length) = fields[1].parse:: ()\uff0c\u901a\u8fc7 :: \u7684\u4f7f\u7528\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668 length \u662f\u4e00\u4e2a f32 \u7c7b\u578b\u7684\u6d6e\u70b9\u6570\u3002\u8fd9\u79cd\u7c7b\u578b\u6807\u6ce8\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u4f46\u662f\u5728\u7f16\u8bd1\u5668\u65e0\u6cd5\u63a8\u65ad\u51fa\u4f60\u7684\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5c31\u5f88\u6709\u7528\u4e86\u3002 \u6761\u4ef6\u7f16\u8bd1\uff1aif cfg!(debug_assertions)\uff0c\u8bf4\u660e\u7d27\u8ddf\u5176\u540e\u7684\u8f93\u51fa\uff08\u6253\u5370\uff09\u53ea\u5728 debug \u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u9690\u5f0f\u8fd4\u56de\uff1aRust \u63d0\u4f9b\u4e86 return \u5173\u952e\u5b57\u7528\u4e8e\u51fd\u6570\u8fd4\u56de\uff0c\u4f46\u662f\u5728\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u7701\u7565\u5b83\u3002\u56e0\u4e3a Rust \u662f \u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00\u3002 \u00b6","title":"\u524d\u8a00"},{"location":"cs/pl/Rust/intro/#_1","text":"","title":"\u524d\u8a00"},{"location":"cs/pl/Rust/intro/#installation","text":"\u7531\u4e8e\u6211\u662fWin,\u76f4\u63a5\u5728\u5b98\u7f51\u4e0b\u8f7drustup\u5c31\u884c\uff0c\u7136\u540e\u6253\u5f00\u540e\u4e00\u8def\u5f04\u4e0b\u53bb\u5c31\u884c \u5378\u8f7d\u3001\u66f4\u65b0\u3001\u68c0\u67e5 rustup update rustup self uninstall rustc --version","title":"Installation"},{"location":"cs/pl/Rust/intro/#rustc","text":"Rust\u4ee3\u7801\u7684\u540e\u7f00\u540d\u662f .rs \uff0c\u901a\u8fc7 rustc code.rs \u6765\u7f16\u8bd1\u518d\u8fd0\u884c","title":"rustc"},{"location":"cs/pl/Rust/intro/#cargo","text":"\u901a\u8fc7rustup\u5b89\u88c5\u540e\u81ea\u5e26cargo\uff0c\u53ef\u4ee5\u901a\u8fc7 cargo --version \u68c0\u67e5 \u5404\u79cd\u547d\u4ee4 cargo new \u65b0\u5efa\u9879\u76ee cargo build \u7f16\u8bd1 cargo run \u8fd0\u884c cargo check \u68c0\u67e5\u662f\u5426\u7f16\u8bd1\u6210\u529f cargo build --release \u9ad8\u6027\u80fd\u7f16\u8bd1","title":"Cargo"},{"location":"cs/pl/Rust/intro/#hello-world","text":"fn main () { println! ( \"Hello, world!\" ); }","title":"Hello world!"},{"location":"cs/pl/Rust/intro/#rust","text":"\u63a7\u5236\u6d41\uff1afor \u548c continue \u8fde\u5728\u4e00\u8d77\u4f7f\u7528\uff0c\u5b9e\u73b0\u5faa\u73af\u63a7\u5236\u3002 \u65b9\u6cd5\u8bed\u6cd5\uff1a\u7531\u4e8e Rust \u6ca1\u6709\u7ee7\u627f\uff0c\u56e0\u6b64 Rust \u4e0d\u662f\u4f20\u7edf\u610f\u4e49\u4e0a\u7684\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff0c\u4f46\u662f\u5b83\u5374\u4ece OO \u8bed\u8a00\u90a3\u91cc\u5077\u5e08\u4e86\u65b9\u6cd5\u7684\u4f7f\u7528 record.trim()\uff0crecord.split(',') \u7b49\u3002 \u9ad8\u9636\u51fd\u6570\u7f16\u7a0b\uff1a\u51fd\u6570\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4e5f\u80fd\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u4f8b\u5982 .map(|field| field.trim())\uff0c\u8fd9\u91cc map \u65b9\u6cd5\u4e2d\u4f7f\u7528\u95ed\u5305\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u79f0\u547c\u4e3a \u533f\u540d\u51fd\u6570\u3001lambda \u51fd\u6570\u3002 \u7c7b\u578b\u6807\u6ce8\uff1aif let Ok(length) = fields[1].parse:: ()\uff0c\u901a\u8fc7 :: \u7684\u4f7f\u7528\uff0c\u544a\u8bc9\u7f16\u8bd1\u5668 length \u662f\u4e00\u4e2a f32 \u7c7b\u578b\u7684\u6d6e\u70b9\u6570\u3002\u8fd9\u79cd\u7c7b\u578b\u6807\u6ce8\u4e0d\u662f\u5f88\u5e38\u7528\uff0c\u4f46\u662f\u5728\u7f16\u8bd1\u5668\u65e0\u6cd5\u63a8\u65ad\u51fa\u4f60\u7684\u6570\u636e\u7c7b\u578b\u65f6\uff0c\u5c31\u5f88\u6709\u7528\u4e86\u3002 \u6761\u4ef6\u7f16\u8bd1\uff1aif cfg!(debug_assertions)\uff0c\u8bf4\u660e\u7d27\u8ddf\u5176\u540e\u7684\u8f93\u51fa\uff08\u6253\u5370\uff09\u53ea\u5728 debug \u6a21\u5f0f\u4e0b\u751f\u6548\u3002 \u9690\u5f0f\u8fd4\u56de\uff1aRust \u63d0\u4f9b\u4e86 return \u5173\u952e\u5b57\u7528\u4e8e\u51fd\u6570\u8fd4\u56de\uff0c\u4f46\u662f\u5728\u5f88\u591a\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u7701\u7565\u5b83\u3002\u56e0\u4e3a Rust \u662f \u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00\u3002","title":"Rust\u6240\u9700\u8981\u6ce8\u610f\u7684\u7279\u6027"},{"location":"cs/pl/Rust/intro/#_2","text":"","title":""},{"location":"cs/pl/cpp/","text":"C/C++ \u00b6","title":"C/C++"},{"location":"cs/pl/cpp/#cc","text":"","title":"C/C++"},{"location":"cs/pl/python/","text":"Python \u00b6 Table of Contents \u00b6 \u57fa\u672c\u8bed\u6cd5","title":"Python"},{"location":"cs/pl/python/#python","text":"","title":"Python"},{"location":"cs/pl/python/#table-of-contents","text":"\u57fa\u672c\u8bed\u6cd5","title":"Table of Contents"},{"location":"cs/pl/python/basic/","text":"\u57fa\u672c\u8bed\u6cd5 \u00b6","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"cs/pl/python/basic/#_1","text":"","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"math/","text":"Mathematic \u00b6 Table of Contents \u00b6 Mathematical Analysis \u6570\u5b66\u5206\u6790","title":"Mathematic"},{"location":"math/#mathematic","text":"","title":"Mathematic"},{"location":"math/#table-of-contents","text":"Mathematical Analysis \u6570\u5b66\u5206\u6790","title":"Table of Contents"},{"location":"math/maa/","text":"\u6570\u5b66\u5206\u6790 \u00b6 Abstract \u5728\u5b66\u6821\u65e0\u804a\u7684\u65f6\u5019\u4f1a\u770b\u70b9\u6dd1\u82ac(),\u4e5f\u4f1a\u76f8\u5e94\u505a\u70b9\u7b14\u8bb0\uff0c\u60f3\u7740\u5199\u90fd\u5199\u4e86\u4e3a\u4ec0\u4e48\u4e0d\u8bb0\u5f55\u4e0a\u6765\u5462\u3002 \u53c2\u8003 \u6570\u5b66\u5206\u6790 \u7b2c\u4e00\u5377 \u7b2c\u4e03\u7248 B.A. \u5353\u91cc\u5947 \u6570\u5b66\u5206\u6790 \u7b2c\u4e8c\u5377 \u7b2c\u4e03\u7248 B.A. \u5353\u91cc\u5947 Table of Contents \u00b6 - Universal Concept \u901a\u7528\u6982\u5ff5","title":"\u6570\u5b66\u5206\u6790"},{"location":"math/maa/#_1","text":"Abstract \u5728\u5b66\u6821\u65e0\u804a\u7684\u65f6\u5019\u4f1a\u770b\u70b9\u6dd1\u82ac(),\u4e5f\u4f1a\u76f8\u5e94\u505a\u70b9\u7b14\u8bb0\uff0c\u60f3\u7740\u5199\u90fd\u5199\u4e86\u4e3a\u4ec0\u4e48\u4e0d\u8bb0\u5f55\u4e0a\u6765\u5462\u3002 \u53c2\u8003 \u6570\u5b66\u5206\u6790 \u7b2c\u4e00\u5377 \u7b2c\u4e03\u7248 B.A. \u5353\u91cc\u5947 \u6570\u5b66\u5206\u6790 \u7b2c\u4e8c\u5377 \u7b2c\u4e03\u7248 B.A. \u5353\u91cc\u5947","title":"\u6570\u5b66\u5206\u6790"},{"location":"math/maa/#table-of-contents","text":"- Universal Concept \u901a\u7528\u6982\u5ff5","title":"Table of Contents"},{"location":"math/maa/uc/","text":"\u901a\u7528\u6982\u5ff5 \u00b6 \u903b\u8f91\u7b26\u53f7 \u00b6 \u7b26\u53f7 \u542b\u4e49 \u89e3\u91ca \\(\\neg\\) \u975e \\(\\neg p\\) ,\u8868\u793a \\(p\\) \u7684\u5426\u547d\u9898 \\(\\wedge\\) \u4e0e \\(p\\wedge q\\) ,\u8868\u793a \\(p\\) \u4e0e \\(q\\) \u540c\u65f6\u6210\u7acb \\(\\vee\\) \u6216 \\(p \\vee q\\) ,\u8868\u793a \\(p\\) \u4e0e \\(q\\) \u81f3\u5c11\u4e00\u4e2a\u6210\u7acb \\(\\Rightarrow\\) \u8574\u542b \\(p \\Rightarrow q\\) ,\u8868\u793a \\(p\\) \u4e3a \\(q\\) \u7684\u5145\u5206\u6761\u4ef6 \\(\\Leftrightarrow\\) \u7b49\u4ef7 \\(p \\Leftrightarrow q\\) ,\u8868\u793a \\(p\\) \u7b49\u4ef7\u4e8e \\(q\\) \u96c6\u5408 \u00b6 \u6027\u8d28 \u00b6 \u96c6\u5408\u53ef\u7531\u4efb\u4f55\u6709\u533a\u522b\u7684\u5bf9\u8c61\u7ec4\u6210 \u96c6\u5408\u7531\u5176\u7ec4\u6210\u5bf9\u8c61\u6574\u4f53\u552f\u4e00\u786e\u5b9a \u4efb\u4f55\u6027\u8d28\u90fd\u786e\u5b9a\u4e00\u4e2a\u5177\u6709\u8be5\u6027\u8d28\u7684\u5bf9\u8c61\u7684\u96c6\u5408 \u8868\u793a \u00b6 \\(x\\) \u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c \\(P(x)\\) \u793a \\(x\\) \u5177\u6709\u6027\u8d28 \\(P\\) ,\u5219\u7528 \\(\\{x|P(x)\\}\\) \u8868\u793a\u96c6\u5408 \u7528 \\(\\{x_1,x_2,...,x_n\\}\\) \u8868\u793a\u96c6\u5408 \u5355\u5143\u7d20\u96c6\u5408 \\(\\{a\\}\\) \u5728\u4e0d\u5f15\u8d77\u6b67\u4e49\u65f6\uff0c\u53ef\u7528 \\(a\\) \u8868\u793a \u5305\u542b\u5173\u7cfb \u00b6 \u7b26\u53f7 \u542b\u4e49 \\(x \\in X\\) x\u5c5e\u4e8eX \\(x \\notin X\\) x\u4e0d\u5c5e\u4e8eX \\(A = B\\) A\u7b49\u4e8eB.\u5373 \\(\\forall x((x \\in A) \\Leftrightarrow(x \\in B))\\) \u6216 \\((A \\subset B)\\wedge(B \\subset A)\\) \\(A \\subset B\\) A\u5305\u542b\u4e8eB.\u5373 \\(\\forall x ((x \\in A)\\Rightarrow(x \\in B))\\) \u6ce8:\u7a7a\u96c6\u53ef\u8868\u793a\u4e3a \\(\\emptyset := \\{x \\in M|x \\neq x\\}\\) \u96c6\u5408\u8fd0\u7b97 \u00b6 \u8fd0\u7b97 \u7b26\u53f7 \u542b\u4e49 \u5e76\u96c6 \\(A \\cup B\\) \\(A \\cup B := \\{(x \\in A)\\vee (x \\in B)\\}\\) \u4ea4\u96c6 \\(A \\cap B\\) \\(A \\cap B := \\{(x \\in A)\\wedge (x \\in B)\\}\\) \u5dee\u96c6 \\(A \\backslash B\\) \\(A \\backslash B := \\{(x \\in A)\\wedge (x \\notin B)\\}\\) \u7b1b\u5361\u5c14\u79ef \u00b6 \u96c6\u5408 \\(X \\times Y := \\{(x,y)|(x\\in X)\\wedge(y \\in Y)\\}\\) \u79f0\u4e3a\u96c6\u5408 \\(X\\) \uff0c \\(Y\\) \u7684\u7b1b\u5361\u5c14\u79ef\u6216\u76f4\u79ef\uff0c\u5176\u4e2d\u5f62\u5982 \\((x,y)\\) \u7684\u4e8c\u5143\u7ec4\u79f0\u4e3a\u5e8f\u5076\u3002 \\(X \\times X\\) \u7b80\u8bb0\u4e3a \\(X^2\\) \u3002 \u8bbe\u5e8f\u5076 \\((x_1,x_2)\\) \u4e3a\u96c6\u5408 \\(X_1\\) \u4e0e \\(X_2\\) \u7684\u76f4\u79ef \\(Z = X_1 \\times X_2\\) \u7684\u5143\u7d20\u3002 \\(x_1\\) \u79f0\u4e3a\u5e8f\u5076 \\(z\\) \u7684\u7b2c\u4e00\u6295\u5f71 \\(pr_1 z\\) , \\(x_2\\) \u79f0\u4e3a\u5e8f\u5076 \\(z\\) \u7684\u7b2c\u4e8c\u6295\u5f71 \\(pr_2 z\\) .\u540c\u65f6\u79f0\u4e3a\u5e8f\u5076 \\(z\\) \u7684\u5750\u6807","title":"\u901a\u7528\u6982\u5ff5"},{"location":"math/maa/uc/#_1","text":"","title":"\u901a\u7528\u6982\u5ff5"},{"location":"math/maa/uc/#_2","text":"\u7b26\u53f7 \u542b\u4e49 \u89e3\u91ca \\(\\neg\\) \u975e \\(\\neg p\\) ,\u8868\u793a \\(p\\) \u7684\u5426\u547d\u9898 \\(\\wedge\\) \u4e0e \\(p\\wedge q\\) ,\u8868\u793a \\(p\\) \u4e0e \\(q\\) \u540c\u65f6\u6210\u7acb \\(\\vee\\) \u6216 \\(p \\vee q\\) ,\u8868\u793a \\(p\\) \u4e0e \\(q\\) \u81f3\u5c11\u4e00\u4e2a\u6210\u7acb \\(\\Rightarrow\\) \u8574\u542b \\(p \\Rightarrow q\\) ,\u8868\u793a \\(p\\) \u4e3a \\(q\\) \u7684\u5145\u5206\u6761\u4ef6 \\(\\Leftrightarrow\\) \u7b49\u4ef7 \\(p \\Leftrightarrow q\\) ,\u8868\u793a \\(p\\) \u7b49\u4ef7\u4e8e \\(q\\)","title":"\u903b\u8f91\u7b26\u53f7"},{"location":"math/maa/uc/#_3","text":"","title":"\u96c6\u5408"},{"location":"math/maa/uc/#_4","text":"\u96c6\u5408\u53ef\u7531\u4efb\u4f55\u6709\u533a\u522b\u7684\u5bf9\u8c61\u7ec4\u6210 \u96c6\u5408\u7531\u5176\u7ec4\u6210\u5bf9\u8c61\u6574\u4f53\u552f\u4e00\u786e\u5b9a \u4efb\u4f55\u6027\u8d28\u90fd\u786e\u5b9a\u4e00\u4e2a\u5177\u6709\u8be5\u6027\u8d28\u7684\u5bf9\u8c61\u7684\u96c6\u5408","title":"\u6027\u8d28"},{"location":"math/maa/uc/#_5","text":"\\(x\\) \u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff0c \\(P(x)\\) \u793a \\(x\\) \u5177\u6709\u6027\u8d28 \\(P\\) ,\u5219\u7528 \\(\\{x|P(x)\\}\\) \u8868\u793a\u96c6\u5408 \u7528 \\(\\{x_1,x_2,...,x_n\\}\\) \u8868\u793a\u96c6\u5408 \u5355\u5143\u7d20\u96c6\u5408 \\(\\{a\\}\\) \u5728\u4e0d\u5f15\u8d77\u6b67\u4e49\u65f6\uff0c\u53ef\u7528 \\(a\\) \u8868\u793a","title":"\u8868\u793a"},{"location":"math/maa/uc/#_6","text":"\u7b26\u53f7 \u542b\u4e49 \\(x \\in X\\) x\u5c5e\u4e8eX \\(x \\notin X\\) x\u4e0d\u5c5e\u4e8eX \\(A = B\\) A\u7b49\u4e8eB.\u5373 \\(\\forall x((x \\in A) \\Leftrightarrow(x \\in B))\\) \u6216 \\((A \\subset B)\\wedge(B \\subset A)\\) \\(A \\subset B\\) A\u5305\u542b\u4e8eB.\u5373 \\(\\forall x ((x \\in A)\\Rightarrow(x \\in B))\\) \u6ce8:\u7a7a\u96c6\u53ef\u8868\u793a\u4e3a \\(\\emptyset := \\{x \\in M|x \\neq x\\}\\)","title":"\u5305\u542b\u5173\u7cfb"},{"location":"math/maa/uc/#_7","text":"\u8fd0\u7b97 \u7b26\u53f7 \u542b\u4e49 \u5e76\u96c6 \\(A \\cup B\\) \\(A \\cup B := \\{(x \\in A)\\vee (x \\in B)\\}\\) \u4ea4\u96c6 \\(A \\cap B\\) \\(A \\cap B := \\{(x \\in A)\\wedge (x \\in B)\\}\\) \u5dee\u96c6 \\(A \\backslash B\\) \\(A \\backslash B := \\{(x \\in A)\\wedge (x \\notin B)\\}\\)","title":"\u96c6\u5408\u8fd0\u7b97"},{"location":"math/maa/uc/#_8","text":"\u96c6\u5408 \\(X \\times Y := \\{(x,y)|(x\\in X)\\wedge(y \\in Y)\\}\\) \u79f0\u4e3a\u96c6\u5408 \\(X\\) \uff0c \\(Y\\) \u7684\u7b1b\u5361\u5c14\u79ef\u6216\u76f4\u79ef\uff0c\u5176\u4e2d\u5f62\u5982 \\((x,y)\\) \u7684\u4e8c\u5143\u7ec4\u79f0\u4e3a\u5e8f\u5076\u3002 \\(X \\times X\\) \u7b80\u8bb0\u4e3a \\(X^2\\) \u3002 \u8bbe\u5e8f\u5076 \\((x_1,x_2)\\) \u4e3a\u96c6\u5408 \\(X_1\\) \u4e0e \\(X_2\\) \u7684\u76f4\u79ef \\(Z = X_1 \\times X_2\\) \u7684\u5143\u7d20\u3002 \\(x_1\\) \u79f0\u4e3a\u5e8f\u5076 \\(z\\) \u7684\u7b2c\u4e00\u6295\u5f71 \\(pr_1 z\\) , \\(x_2\\) \u79f0\u4e3a\u5e8f\u5076 \\(z\\) \u7684\u7b2c\u4e8c\u6295\u5f71 \\(pr_2 z\\) .\u540c\u65f6\u79f0\u4e3a\u5e8f\u5076 \\(z\\) \u7684\u5750\u6807","title":"\u7b1b\u5361\u5c14\u79ef"},{"location":"sd/","text":"Miscellaneous \u00b6 Abstract \u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u6211\u4e5f\u4e0d\u77e5\u9053\u6b38\u3002 Table of Contents \u00b6 Music Theory \u57fa\u7840\u4e50\u7406","title":"Miscellaneous"},{"location":"sd/#miscellaneous","text":"Abstract \u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u6211\u4e5f\u4e0d\u77e5\u9053\u6b38\u3002","title":"Miscellaneous"},{"location":"sd/#table-of-contents","text":"Music Theory \u57fa\u7840\u4e50\u7406","title":"Table of Contents"},{"location":"sd/music/","text":"Music Theory \u00b6 Table of Contents \u00b6 \u57fa\u7840\u4e50\u7406","title":"Music Theory"},{"location":"sd/music/#music-theory","text":"","title":"Music Theory"},{"location":"sd/music/#table-of-contents","text":"\u57fa\u7840\u4e50\u7406","title":"Table of Contents"},{"location":"sd/music/basic/","text":"\u57fa\u7840\u4e50\u7406 \u00b6","title":"\u57fa\u7840\u4e50\u7406"},{"location":"sd/music/basic/#_1","text":"","title":"\u57fa\u7840\u4e50\u7406"}]}