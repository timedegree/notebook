{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hi! (:\u025c\u230b\u2220)_ \u00b6 site.info \u8fd9\u91cc\u662f\u65f6\u5ea6\u5ea6\u634f\uff0c\u8fd9\u4e2a\u7b14\u8bb0\u672c\u662f\u624d\u642d\u5efa\u8d77\u6765\u7684\u6240\u4ee5\u4f1a\u770b\u5230\u91cc\u9762\u6682\u65f6\u6ca1\u6709\u4e1c\u897f\u3002\u63a5\u4e0b\u6765\u4f1a\u6301\u7eed\u66f4\u65b0\u3002 \u8fd9\u4e2a\u7b14\u8bb0\u672c\u4f1a\u7528\u6765\u5b58\u4e9b\u4e13\u4e1a\u6027\u8f83\u5f3a\u7684\u7b14\u8bb0\u3002\u4ee5\u4fbf\u4e8e\u548c\u81ea\u5df1\u7684\u535a\u5ba2\u533a\u5206\u5f00\u6765\u3002","title":"Hi! (:\u025c\u230b\u2220)_"},{"location":"#hi-_","text":"site.info \u8fd9\u91cc\u662f\u65f6\u5ea6\u5ea6\u634f\uff0c\u8fd9\u4e2a\u7b14\u8bb0\u672c\u662f\u624d\u642d\u5efa\u8d77\u6765\u7684\u6240\u4ee5\u4f1a\u770b\u5230\u91cc\u9762\u6682\u65f6\u6ca1\u6709\u4e1c\u897f\u3002\u63a5\u4e0b\u6765\u4f1a\u6301\u7eed\u66f4\u65b0\u3002 \u8fd9\u4e2a\u7b14\u8bb0\u672c\u4f1a\u7528\u6765\u5b58\u4e9b\u4e13\u4e1a\u6027\u8f83\u5f3a\u7684\u7b14\u8bb0\u3002\u4ee5\u4fbf\u4e8e\u548c\u81ea\u5df1\u7684\u535a\u5ba2\u533a\u5206\u5f00\u6765\u3002","title":"Hi! (:\u025c\u230b\u2220)_"},{"location":"CTF/","text":"CTF \u00b6 Table of Contents \u00b6","title":"CTF"},{"location":"CTF/#ctf","text":"","title":"CTF"},{"location":"CTF/#table-of-contents","text":"","title":"Table of Contents"},{"location":"cs/","text":"Computer Science \u00b6 Table of Contents \u00b6 Programming Language \u7f16\u7a0b\u8bed\u8a00 C/C++ Python Rust","title":"Computer Science"},{"location":"cs/#computer-science","text":"","title":"Computer Science"},{"location":"cs/#table-of-contents","text":"Programming Language \u7f16\u7a0b\u8bed\u8a00 C/C++ Python Rust","title":"Table of Contents"},{"location":"cs/pl/","text":"Programming Language \u00b6 Table of Contents \u00b6 C/C++ Python Rust \u524d\u8a00 \u8bed\u6cd5 \u9644\u5f55","title":"Programming Language"},{"location":"cs/pl/#programming-language","text":"","title":"Programming Language"},{"location":"cs/pl/#table-of-contents","text":"C/C++ Python Rust \u524d\u8a00 \u8bed\u6cd5 \u9644\u5f55","title":"Table of Contents"},{"location":"cs/pl/Rust/","text":"Rust \u00b6 Abstract \u770bMK\u7684\u5c0f\u4f19\u4f34\u6700\u8fd1\u90fd\u5728\u73a9Rust\uff0c\u6211\u4e5f\u7a81\u7136\u60f3\u73a9\u4e00\u4e0b\uff0c\u6240\u4ee5\u5c31\u5f00\u4e86\u8fd9\u4e48\u4e00\u4e2a\u9875\u9762\u6765\u6574\u7406\u4e00\u4e0bRust\u7684\u7b14\u8bb0\u3002 Table of Contents \u00b6 Introduction \u524d\u8a00 Grammar \u8bed\u6cd5 Appendix \u9644\u5f55","title":"Rust"},{"location":"cs/pl/Rust/#rust","text":"Abstract \u770bMK\u7684\u5c0f\u4f19\u4f34\u6700\u8fd1\u90fd\u5728\u73a9Rust\uff0c\u6211\u4e5f\u7a81\u7136\u60f3\u73a9\u4e00\u4e0b\uff0c\u6240\u4ee5\u5c31\u5f00\u4e86\u8fd9\u4e48\u4e00\u4e2a\u9875\u9762\u6765\u6574\u7406\u4e00\u4e0bRust\u7684\u7b14\u8bb0\u3002","title":"Rust"},{"location":"cs/pl/Rust/#table-of-contents","text":"Introduction \u524d\u8a00 Grammar \u8bed\u6cd5 Appendix \u9644\u5f55","title":"Table of Contents"},{"location":"cs/pl/Rust/app/","text":"\u9644\u5f55 \u00b6 \u5173\u952e\u5b57 \u00b6 \u5173\u952e\u5b57 as - \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u6d88\u9664\u7279\u5b9a\u5305\u542b\u9879\u7684 trait \u7684\u6b67\u4e49\uff0c\u6216\u8005\u5bf9 use \u548c extern crate \u8bed\u53e5\u4e2d\u7684\u9879\u91cd\u547d\u540d async - \u8fd4\u56de\u4e00\u4e2a Future \u800c\u4e0d\u662f\u963b\u585e\u5f53\u524d\u7ebf\u7a0b await - \u6682\u505c\u6267\u884c\uff0c\u76f4\u5230 Future \u7684\u7ed3\u679c\u51c6\u5907\u597d break - \u7acb\u523b\u9000\u51fa\u5faa\u73af const - \u5b9a\u4e49\u5e38\u91cf\u6216\u4e0d\u53d8\u88f8\u6307\u9488\uff08constant raw pointer\uff09 continue - \u7ee7\u7eed\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u8fed\u4ee3 crate - \u94fe\u63a5\uff08link\uff09\u4e00\u4e2a\u5916\u90e8 crate \u6216\u4e00\u4e2a\u4ee3\u8868\u5b8f\u5b9a\u4e49\u7684 crate \u7684\u5b8f\u53d8\u91cf dyn - \u52a8\u6001\u5206\u53d1 trait \u5bf9\u8c61 else - \u4f5c\u4e3a if \u548c if let \u63a7\u5236\u6d41\u7ed3\u6784\u7684 fallback enum - \u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e extern - \u94fe\u63a5\u4e00\u4e2a\u5916\u90e8 crate \u3001\u51fd\u6570\u6216\u53d8\u91cf false - \u5e03\u5c14\u5b57\u9762\u91cf false fn - \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6216 \u51fd\u6570\u6307\u9488\u7c7b\u578b (function pointer type) for - \u904d\u5386\u4e00\u4e2a\u8fed\u4ee3\u5668\u6216\u5b9e\u73b0\u4e00\u4e2a trait \u6216\u8005\u6307\u5b9a\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u7684\u751f\u547d\u5468\u671f if - \u57fa\u4e8e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5206\u652f impl - \u5b9e\u73b0\u81ea\u6709\u6216 trait \u529f\u80fd in - for \u5faa\u73af\u8bed\u6cd5\u7684\u4e00\u90e8\u5206 let - \u7ed1\u5b9a\u4e00\u4e2a\u53d8\u91cf loop - \u65e0\u6761\u4ef6\u5faa\u73af match - \u6a21\u5f0f\u5339\u914d mod - \u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757 move - \u4f7f\u95ed\u5305\u83b7\u53d6\u5176\u6240\u6355\u83b7\u9879\u7684\u6240\u6709\u6743 mut - \u8868\u793a\u5f15\u7528\u3001\u88f8\u6307\u9488\u6216\u6a21\u5f0f\u7ed1\u5b9a\u7684\u53ef\u53d8\u6027 pub - \u8868\u793a\u7ed3\u6784\u4f53\u5b57\u6bb5\u3001impl \u5757\u6216\u6a21\u5757\u7684\u516c\u6709\u53ef\u89c1\u6027- ref - \u901a\u8fc7\u5f15\u7528\u7ed1\u5b9a return - \u4ece\u51fd\u6570\u4e2d\u8fd4\u56de Self - \u5b9e\u73b0 trait \u7684\u7c7b\u578b\u7684\u7c7b\u578b\u522b\u540d self - \u8868\u793a\u65b9\u6cd5\u672c\u8eab\u6216\u5f53\u524d\u6a21\u5757 static - \u8868\u793a\u5168\u5c40\u53d8\u91cf\u6216\u5728\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4fdd\u6301\u5176\u751f\u547d\u5468\u671f struct - \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 super - \u8868\u793a\u5f53\u524d\u6a21\u5757\u7684\u7236\u6a21\u5757 trait - \u5b9a\u4e49\u4e00\u4e2a trait true - \u5e03\u5c14\u5b57\u9762\u91cf true type - \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u522b\u540d\u6216\u5173\u8054\u7c7b\u578b unsafe - \u8868\u793a\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u3001\u51fd\u6570\u3001trait \u6216\u5b9e\u73b0 use - \u5f15\u5165\u5916\u90e8\u7a7a\u95f4\u7684\u7b26\u53f7 where - \u8868\u793a\u4e00\u4e2a\u7ea6\u675f\u7c7b\u578b\u7684\u4ece\u53e5 while - \u57fa\u4e8e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5224\u65ad\u662f\u5426\u8fdb\u884c\u5faa\u73af \u4fdd\u7559\u5b57 \u5982\u4e0b\u5173\u952e\u5b57\u6ca1\u6709\u4efb\u4f55\u529f\u80fd\uff0c\u4e0d\u8fc7\u7531 Rust \u4fdd\u7559\u4ee5\u5907\u5c06\u6765\u5e94\u7528\u3002 abstract become box do final macro override priv try typeof unsized virtual yield","title":"\u9644\u5f55"},{"location":"cs/pl/Rust/app/#_1","text":"","title":"\u9644\u5f55"},{"location":"cs/pl/Rust/app/#_2","text":"\u5173\u952e\u5b57 as - \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u6d88\u9664\u7279\u5b9a\u5305\u542b\u9879\u7684 trait \u7684\u6b67\u4e49\uff0c\u6216\u8005\u5bf9 use \u548c extern crate \u8bed\u53e5\u4e2d\u7684\u9879\u91cd\u547d\u540d async - \u8fd4\u56de\u4e00\u4e2a Future \u800c\u4e0d\u662f\u963b\u585e\u5f53\u524d\u7ebf\u7a0b await - \u6682\u505c\u6267\u884c\uff0c\u76f4\u5230 Future \u7684\u7ed3\u679c\u51c6\u5907\u597d break - \u7acb\u523b\u9000\u51fa\u5faa\u73af const - \u5b9a\u4e49\u5e38\u91cf\u6216\u4e0d\u53d8\u88f8\u6307\u9488\uff08constant raw pointer\uff09 continue - \u7ee7\u7eed\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af\u8fed\u4ee3 crate - \u94fe\u63a5\uff08link\uff09\u4e00\u4e2a\u5916\u90e8 crate \u6216\u4e00\u4e2a\u4ee3\u8868\u5b8f\u5b9a\u4e49\u7684 crate \u7684\u5b8f\u53d8\u91cf dyn - \u52a8\u6001\u5206\u53d1 trait \u5bf9\u8c61 else - \u4f5c\u4e3a if \u548c if let \u63a7\u5236\u6d41\u7ed3\u6784\u7684 fallback enum - \u5b9a\u4e49\u4e00\u4e2a\u679a\u4e3e extern - \u94fe\u63a5\u4e00\u4e2a\u5916\u90e8 crate \u3001\u51fd\u6570\u6216\u53d8\u91cf false - \u5e03\u5c14\u5b57\u9762\u91cf false fn - \u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\u6216 \u51fd\u6570\u6307\u9488\u7c7b\u578b (function pointer type) for - \u904d\u5386\u4e00\u4e2a\u8fed\u4ee3\u5668\u6216\u5b9e\u73b0\u4e00\u4e2a trait \u6216\u8005\u6307\u5b9a\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u7684\u751f\u547d\u5468\u671f if - \u57fa\u4e8e\u6761\u4ef6\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5206\u652f impl - \u5b9e\u73b0\u81ea\u6709\u6216 trait \u529f\u80fd in - for \u5faa\u73af\u8bed\u6cd5\u7684\u4e00\u90e8\u5206 let - \u7ed1\u5b9a\u4e00\u4e2a\u53d8\u91cf loop - \u65e0\u6761\u4ef6\u5faa\u73af match - \u6a21\u5f0f\u5339\u914d mod - \u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757 move - \u4f7f\u95ed\u5305\u83b7\u53d6\u5176\u6240\u6355\u83b7\u9879\u7684\u6240\u6709\u6743 mut - \u8868\u793a\u5f15\u7528\u3001\u88f8\u6307\u9488\u6216\u6a21\u5f0f\u7ed1\u5b9a\u7684\u53ef\u53d8\u6027 pub - \u8868\u793a\u7ed3\u6784\u4f53\u5b57\u6bb5\u3001impl \u5757\u6216\u6a21\u5757\u7684\u516c\u6709\u53ef\u89c1\u6027- ref - \u901a\u8fc7\u5f15\u7528\u7ed1\u5b9a return - \u4ece\u51fd\u6570\u4e2d\u8fd4\u56de Self - \u5b9e\u73b0 trait \u7684\u7c7b\u578b\u7684\u7c7b\u578b\u522b\u540d self - \u8868\u793a\u65b9\u6cd5\u672c\u8eab\u6216\u5f53\u524d\u6a21\u5757 static - \u8868\u793a\u5168\u5c40\u53d8\u91cf\u6216\u5728\u6574\u4e2a\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4fdd\u6301\u5176\u751f\u547d\u5468\u671f struct - \u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u4f53 super - \u8868\u793a\u5f53\u524d\u6a21\u5757\u7684\u7236\u6a21\u5757 trait - \u5b9a\u4e49\u4e00\u4e2a trait true - \u5e03\u5c14\u5b57\u9762\u91cf true type - \u5b9a\u4e49\u4e00\u4e2a\u7c7b\u578b\u522b\u540d\u6216\u5173\u8054\u7c7b\u578b unsafe - \u8868\u793a\u4e0d\u5b89\u5168\u7684\u4ee3\u7801\u3001\u51fd\u6570\u3001trait \u6216\u5b9e\u73b0 use - \u5f15\u5165\u5916\u90e8\u7a7a\u95f4\u7684\u7b26\u53f7 where - \u8868\u793a\u4e00\u4e2a\u7ea6\u675f\u7c7b\u578b\u7684\u4ece\u53e5 while - \u57fa\u4e8e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5224\u65ad\u662f\u5426\u8fdb\u884c\u5faa\u73af \u4fdd\u7559\u5b57 \u5982\u4e0b\u5173\u952e\u5b57\u6ca1\u6709\u4efb\u4f55\u529f\u80fd\uff0c\u4e0d\u8fc7\u7531 Rust \u4fdd\u7559\u4ee5\u5907\u5c06\u6765\u5e94\u7528\u3002 abstract become box do final macro override priv try typeof unsized virtual yield","title":"\u5173\u952e\u5b57"},{"location":"cs/pl/Rust/gram/","text":"\u8bed\u6cd5 \u00b6 \u5e38\u89c1\u7f16\u7a0b\u6982\u5ff5 \u00b6 \u53d8\u91cf \u00b6 \u53ef\u53d8\u6027 \u4ee5let\u76f4\u63a5\u58f0\u660e\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8\u53d8\u91cf \u8981\u4f7f\u7528\u53ef\u53d8\u53d8\u91cf\u53ef\u4ee5\u5728\u53d8\u91cf\u540d\u524d\u52a0mut let x = 5 ; //\u4e0d\u53ef\u53d8 let mut x = 5 ; //\u53ef\u53d8 \u5e38\u91cf\u58f0\u660e \u4e0eC/C++\u7c7b\u4f3c\uff0c\u65b9\u5f0f\u4e3a\uff1a //const \u53d8\u91cf\u540d: \u6570\u636e\u7c7b\u578b = \u503c const pi : f32 = 3.14159 ; \u53d8\u91cf\u906e\u853d \u901a\u8fc7\u4f7f\u7528\u76f8\u540c\u53d8\u91cf\u540d\u4e0elet\u6765\u5b9e\u73b0 fn main () { let x = 5 ; //\u58f0\u660e\u53d8\u91cfx\u4ee5\u53cax\u7684\u503c\u4e3a5 let x = x + 1 ; //\u901a\u8fc7let\u5c06x\u7684\u503c\u53d8\u4e3a6 { //\u8fdb\u5165\u5185\u90e8\u4f5c\u7528\u57df let x = x * 2 ; //\u518d\u6b21\u5c06x\u7684\u503c\u53d8\u4e3a12 println! ( \"The value of x in the inner scope is: {}\" , x ); //\u8f93\u51fa\u7ed3\u679c\u4e3a 12 } //\u79bb\u5f00\u5185\u90e8\u4f5c\u7528\u57dfx\u7684\u503c\u53d8\u56de6 println! ( \"The value of x is: {}\" , x ); //\u8f93\u51fa\u7ed3\u679c\u4e3a6 } Warning \u4e0emut\u4e0d\u540c,\u901a\u8fc7\u4f7f\u7528 let\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u503c\u8fdb\u884c\u4e00\u4e9b\u8f6c\u6362\uff0c\u4f46\u5728\u8fd9\u4e9b\u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u53d8\u91cf\u5c06\u662f\u4e0d\u53ef\u53d8\u7684 \u7b2c\u4e8c\u4e2a\u4e0d\u540c\uff0c\u6211\u4eec\u5728\u4f7f\u7528let\u5173\u952e\u5b57\u65f6\uff0c\u6709\u6548\u5730\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u503c\u7684\u7c7b\u578b\uff0c\u4f46\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u540d\u79f0\u3002 code \u6b63\u786e\uff1a let spaces = \" \" ; let spaces = spaces . len (); \u9519\u8bef: let mut spaces = \" \" ; let spaces = spaces . len (); \u6570\u636e\u7c7b\u578b \u00b6 \u6807\u91cf\uff08Scalar\uff09 \u00b6 \u6574\u578b \u00b6 \u957f\u5ea6 \u6709\u7b26\u53f7 \u65e0\u7b26\u53f7 8-bit i8 u8 16-bit i16 u16 32-bit i32 u32 64-bit i64 u64 128-bit i128 u128 arch isize usize isize\u548cusize\u662f\u6839\u636e\u7cfb\u7edf\u800c\u5b9a\uff0832/64\uff09\u3002 \u540c\u65f6\u6574\u578b\u7684\u503c\u4e5f\u53ef\u4ee5\u7528\u4e0d\u540c\u8fdb\u5236\u8868\u793a\uff08\u5341\u516d\u8fdb\u52360x\u5f00\u5934\uff0c\u516b\u8fdb\u52360o\u5f00\u5934\uff0c\u4e8c\u8fdb\u52360b\u5f00\u5934\uff0c\u5355\u5b57\u8282\u5b57\u7b26b\u5f00\u5934\uff08b\u2019A\u2019\uff09\uff09\u3002 \u6d6e\u70b9\u578b \u00b6 \u5355\u7cbe\u5ea6\u4e3af32,\u53cc\u7cbe\u5ea6\u4e3af64\u3002 \u5e03\u5c14\u578b \u00b6 bool\uff0c\u503c\u4e3a\u5168\u5c0f\u5199true/false\u3002 \u5b57\u7b26\u578b \u00b6 char\uff0c\u5927\u5c0f\u4e3a4\u5b57\u8282(Unicode),\u5355\u5f15\u53f7\u4e3a\u5b57\u7b26\uff0c\u53cc\u5f15\u53f7\u4e3a\u5b57\u7b26\u4e32\u3002 \u590d\u5408\u7c7b\u578b\uff08Compound\uff09 \u00b6 \u5143\u7ec4 \u00b6 \u5143\u7ec4\u5185\u7684\u5143\u7d20\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c\uff0c\u4f46\u5143\u7ec4\u7c7b\u578b\u53ca\u5143\u7ec4\u957f\u5ea6\u4e0e\u5143\u7ec4\u5185\u5404\u4e2a\u5143\u7d20\u6709\u5173\uff0c\u5982 fn main () { let tup : ( i32 , f64 , u8 ) = ( 500 , 6.4 , 1 ); } \u53ef\u4ee5\u901a\u8fc7.\u52a0\u7d22\u5f15\uff08\u7d22\u5f15\u4ece0\u5f00\u59cb\uff09\u6765\u8bbf\u95ee\u5143\u7d20\uff1a fn main () { let x : ( i32 , f64 , u8 ) = ( 500 , 6.4 , 1 ); let five_hundred = x . 0 ; let six_point_four = x . 1 ; let one = x . 2 ; } \u6570\u7ec4 \u00b6 \u548cPython\u7684\u5217\u8868\u7c7b\u4f3c\uff0c\u6211\u4eec\u7528\u65b9\u62ec\u53f7\u5185\u9017\u53f7\u5206\u9694\u7684\u5f62\u5f0f\u6765\u58f0\u660e\u6570\u7ec4\uff0c\u4f46\u6570\u7ec4\u957f\u5ea6\u4e0d\u53ef\u53d8\u3002\u5982 fn main () { let a = [ 1 , 2 , 3 , 4 , 5 ]; } \u6216\u662f\uff1a fn main () { let a : [ i32 ; 5 ] = [ 1 , 2 , 3 , 4 , 5 ]; } \u5728\u6570\u7ec4\u4e2d\u5404\u4e2a\u5143\u7d20\u76f8\u540c\u65f6\u4e5f\u53ef\u4ee5\u8fd9\u6837\u5b9a\u4e49 fn main () { let a = [ 3 ; 5 ]; let a = [ 3 , 3 , 3 , 3 , 3 ]; //\u4e8c\u8005\u6548\u679c\u76f8\u540c }","title":"\u8bed\u6cd5"},{"location":"cs/pl/Rust/gram/#_1","text":"","title":"\u8bed\u6cd5"},{"location":"cs/pl/Rust/gram/#_2","text":"","title":"\u5e38\u89c1\u7f16\u7a0b\u6982\u5ff5"},{"location":"cs/pl/Rust/gram/#_3","text":"\u53ef\u53d8\u6027 \u4ee5let\u76f4\u63a5\u58f0\u660e\u53d8\u91cf\u9ed8\u8ba4\u4e3a\u4e0d\u53ef\u53d8\u53d8\u91cf \u8981\u4f7f\u7528\u53ef\u53d8\u53d8\u91cf\u53ef\u4ee5\u5728\u53d8\u91cf\u540d\u524d\u52a0mut let x = 5 ; //\u4e0d\u53ef\u53d8 let mut x = 5 ; //\u53ef\u53d8 \u5e38\u91cf\u58f0\u660e \u4e0eC/C++\u7c7b\u4f3c\uff0c\u65b9\u5f0f\u4e3a\uff1a //const \u53d8\u91cf\u540d: \u6570\u636e\u7c7b\u578b = \u503c const pi : f32 = 3.14159 ; \u53d8\u91cf\u906e\u853d \u901a\u8fc7\u4f7f\u7528\u76f8\u540c\u53d8\u91cf\u540d\u4e0elet\u6765\u5b9e\u73b0 fn main () { let x = 5 ; //\u58f0\u660e\u53d8\u91cfx\u4ee5\u53cax\u7684\u503c\u4e3a5 let x = x + 1 ; //\u901a\u8fc7let\u5c06x\u7684\u503c\u53d8\u4e3a6 { //\u8fdb\u5165\u5185\u90e8\u4f5c\u7528\u57df let x = x * 2 ; //\u518d\u6b21\u5c06x\u7684\u503c\u53d8\u4e3a12 println! ( \"The value of x in the inner scope is: {}\" , x ); //\u8f93\u51fa\u7ed3\u679c\u4e3a 12 } //\u79bb\u5f00\u5185\u90e8\u4f5c\u7528\u57dfx\u7684\u503c\u53d8\u56de6 println! ( \"The value of x is: {}\" , x ); //\u8f93\u51fa\u7ed3\u679c\u4e3a6 } Warning \u4e0emut\u4e0d\u540c,\u901a\u8fc7\u4f7f\u7528 let\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u4e00\u4e2a\u503c\u8fdb\u884c\u4e00\u4e9b\u8f6c\u6362\uff0c\u4f46\u5728\u8fd9\u4e9b\u8f6c\u6362\u5b8c\u6210\u540e\uff0c\u53d8\u91cf\u5c06\u662f\u4e0d\u53ef\u53d8\u7684 \u7b2c\u4e8c\u4e2a\u4e0d\u540c\uff0c\u6211\u4eec\u5728\u4f7f\u7528let\u5173\u952e\u5b57\u65f6\uff0c\u6709\u6548\u5730\u521b\u5efa\u4e86\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u503c\u7684\u7c7b\u578b\uff0c\u4f46\u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u540d\u79f0\u3002 code \u6b63\u786e\uff1a let spaces = \" \" ; let spaces = spaces . len (); \u9519\u8bef: let mut spaces = \" \" ; let spaces = spaces . len ();","title":"\u53d8\u91cf"},{"location":"cs/pl/Rust/gram/#_4","text":"","title":"\u6570\u636e\u7c7b\u578b"},{"location":"cs/pl/Rust/intro/","text":"\u524d\u8a00 \u00b6 Installation \u00b6 \u7531\u4e8e\u6211\u662fWin,\u76f4\u63a5\u5728\u5b98\u7f51\u4e0b\u8f7drustup\u5c31\u884c\uff0c\u7136\u540e\u6253\u5f00\u540e\u4e00\u8def\u5f04\u4e0b\u53bb\u5c31\u884c \u5378\u8f7d\u3001\u66f4\u65b0\u3001\u68c0\u67e5 rustup update rustup self uninstall rustc --version rustc \u00b6 Rust\u4ee3\u7801\u7684\u540e\u7f00\u540d\u662f .rs \uff0c\u901a\u8fc7 rustc code.rs \u6765\u7f16\u8bd1\u518d\u8fd0\u884c Cargo \u00b6 \u901a\u8fc7rustup\u5b89\u88c5\u540e\u81ea\u5e26cargo\uff0c\u53ef\u4ee5\u901a\u8fc7 cargo --version \u68c0\u67e5 \u6784\u5efa\u3001\u8fd0\u884c\u3001\u53d1\u5e03 cargo build cargo run cargo check cargo build --release","title":"\u524d\u8a00"},{"location":"cs/pl/Rust/intro/#_1","text":"","title":"\u524d\u8a00"},{"location":"cs/pl/Rust/intro/#installation","text":"\u7531\u4e8e\u6211\u662fWin,\u76f4\u63a5\u5728\u5b98\u7f51\u4e0b\u8f7drustup\u5c31\u884c\uff0c\u7136\u540e\u6253\u5f00\u540e\u4e00\u8def\u5f04\u4e0b\u53bb\u5c31\u884c \u5378\u8f7d\u3001\u66f4\u65b0\u3001\u68c0\u67e5 rustup update rustup self uninstall rustc --version","title":"Installation"},{"location":"cs/pl/Rust/intro/#rustc","text":"Rust\u4ee3\u7801\u7684\u540e\u7f00\u540d\u662f .rs \uff0c\u901a\u8fc7 rustc code.rs \u6765\u7f16\u8bd1\u518d\u8fd0\u884c","title":"rustc"},{"location":"cs/pl/Rust/intro/#cargo","text":"\u901a\u8fc7rustup\u5b89\u88c5\u540e\u81ea\u5e26cargo\uff0c\u53ef\u4ee5\u901a\u8fc7 cargo --version \u68c0\u67e5 \u6784\u5efa\u3001\u8fd0\u884c\u3001\u53d1\u5e03 cargo build cargo run cargo check cargo build --release","title":"Cargo"},{"location":"cs/pl/cpp/","text":"C/C++ \u00b6","title":"C/C++"},{"location":"cs/pl/cpp/#cc","text":"","title":"C/C++"},{"location":"cs/pl/python/","text":"Python \u00b6 Table of Contents \u00b6 \u57fa\u672c\u8bed\u6cd5","title":"Python"},{"location":"cs/pl/python/#python","text":"","title":"Python"},{"location":"cs/pl/python/#table-of-contents","text":"\u57fa\u672c\u8bed\u6cd5","title":"Table of Contents"},{"location":"cs/pl/python/basic/","text":"\u57fa\u672c\u8bed\u6cd5 \u00b6","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"cs/pl/python/basic/#_1","text":"","title":"\u57fa\u672c\u8bed\u6cd5"},{"location":"math/","text":"Mathematic \u00b6 Table of Contents \u00b6","title":"Mathematic"},{"location":"math/#mathematic","text":"","title":"Mathematic"},{"location":"math/#table-of-contents","text":"","title":"Table of Contents"},{"location":"sd/","text":"Miscellaneous \u00b6 Abstract \u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u6211\u4e5f\u4e0d\u77e5\u9053\u6b38\u3002 Table of Contents \u00b6 Music Theory \u57fa\u7840\u4e50\u7406","title":"Miscellaneous"},{"location":"sd/#miscellaneous","text":"Abstract \u8fd9\u91cc\u4f1a\u653e\u4e00\u4e9b\u6742\u4e03\u6742\u516b\u7684\u4e1c\u897f\uff0c\u4f1a\u51fa\u73b0\u4ec0\u4e48\u6211\u4e5f\u4e0d\u77e5\u9053\u6b38\u3002","title":"Miscellaneous"},{"location":"sd/#table-of-contents","text":"Music Theory \u57fa\u7840\u4e50\u7406","title":"Table of Contents"},{"location":"sd/music/","text":"Music Theory \u00b6 Table of Contents \u00b6 \u57fa\u7840\u4e50\u7406","title":"Music Theory"},{"location":"sd/music/#music-theory","text":"","title":"Music Theory"},{"location":"sd/music/#table-of-contents","text":"\u57fa\u7840\u4e50\u7406","title":"Table of Contents"},{"location":"sd/music/basic/","text":"\u57fa\u7840\u4e50\u7406 \u00b6","title":"\u57fa\u7840\u4e50\u7406"},{"location":"sd/music/basic/#_1","text":"","title":"\u57fa\u7840\u4e50\u7406"}]}